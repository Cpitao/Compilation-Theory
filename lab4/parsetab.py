
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFPRECnonassocELSEnonassoc=ADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNleft+-left*/left\'rightUMINUSADDASSIGN BREAK CONTINUE DIFF DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GE ID IF INTNUM LE MULASSIGN ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : instructions_optinstructions_opt : instructions instructions_opt : instructions : instructions instruction instructions : instruction instruction : expression\n                    | assignment \';\'\n                    | ifexpr\n                    | loop\n                    | returnexpr \';\'\n                    | printexpr \';\'\n                    | breakOrContinue \';\'\n                    | complexinstructionbreakOrContinue : brk\n                        | cntbrk : BREAKcnt : CONTINUEcomplexinstruction : \'{\' instructions \'}\'assignment : assignable \'=\' expression\n                    | assignable ADDASSIGN expression\n                    | assignable SUBASSIGN expression\n                    | assignable MULASSIGN expression\n                    | assignable DIVASSIGN expressionassignable : ID\n                    | ID \'[\' expression \',\' expression \']\'expression : binexp\n                    | transpose\n                    | num\n                    | assignable\n                    | special \'(\' expression \')\'\n                    | \'[\' minit \']\'\n                    | \'-\' expression %prec UMINUStranspose : expression "\'"\n    num : int\n            | floatint : INTNUMfloat : FLOATNUMbinexp : mutexp\n                | compexpmutexp : expression \'+\' expression\n                | expression \'-\' expression\n                | expression \'*\' expression\n                | expression \'/\' expression\n                | expression DOTADD expression\n                | expression DOTSUB expression\n                | expression DOTMUL expression\n                | expression DOTDIV expressioncompexp : expression LE expression\n                | expression GE expression\n                | expression EQ expression\n                | expression \'>\' expression\n                | expression \'<\' expression\n                | expression DIFF expressionspecial : EYE\n                | ZEROS\n                | ONESminit : minit \',\' \'[\' matrixcontents \']\'\n                | \'[\' matrixcontents \']\'matrixcontents : expression\n                        | matrixcontents \',\' expressionifexpr : IF \'(\' expression \')\' instruction %prec IFPREC\n                | IF \'(\' expression \')\' instruction ELSE instructionloop : forloop\n            | whileloopforloop : FOR ID \'=\' range instructionwhileloop : WHILE \'(\' expression \')\' instructionrange : expression \':\' expressionreturnexpr : RETURN expressionprintexpr : PRINT printableprintable : STRING\n                | expression\n                | printable \',\' expression'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,7,8,12,13,14,15,16,21,22,28,29,30,31,32,40,41,42,43,58,59,60,61,70,71,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,107,111,123,125,127,130,132,],[-3,0,-1,-2,-5,-6,-8,-9,-13,-26,-27,-28,-29,-63,-64,-38,-39,-34,-35,-24,-36,-37,-4,-33,-7,-10,-11,-12,-32,-29,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,-61,-65,-66,-25,-62,]),'[':([0,3,4,5,7,8,12,13,14,15,16,18,19,21,22,23,24,27,28,29,30,31,32,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,104,106,107,109,111,113,114,115,117,118,120,123,125,126,127,129,130,131,132,],[18,18,-5,-6,-8,-9,-13,-26,-27,-28,-29,68,18,-63,-64,18,18,18,-38,-39,-34,-35,78,-36,-37,-4,-33,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-7,-10,-11,-12,18,18,18,18,18,18,18,-32,-29,18,18,18,18,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,114,18,-18,18,-30,18,18,18,18,18,18,-61,-65,18,-66,18,-25,-67,-62,]),'-':([0,3,4,5,7,8,12,13,14,15,16,19,21,22,23,24,27,28,29,30,31,32,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,123,124,125,126,127,129,130,131,132,],[19,19,-5,45,-8,-9,-13,-26,-27,-28,-29,19,-63,-64,19,19,19,-38,-39,-34,-35,-24,-36,-37,-4,-33,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-7,-10,-11,-12,19,19,19,19,19,19,19,-32,-29,19,45,45,19,19,19,-40,-41,-42,-43,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-31,45,19,-18,45,19,45,-30,19,19,19,45,19,19,45,19,45,-61,45,-65,19,-66,19,-25,45,-62,]),'IF':([0,3,4,5,7,8,12,13,14,15,16,21,22,27,28,29,30,31,32,40,41,42,43,58,59,60,61,70,71,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,107,111,115,118,120,123,125,127,129,130,131,132,],[20,20,-5,-6,-8,-9,-13,-26,-27,-28,-29,-63,-64,20,-38,-39,-34,-35,-24,-36,-37,-4,-33,-7,-10,-11,-12,-32,-29,20,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,20,20,20,-61,-65,-66,20,-25,-67,-62,]),'RETURN':([0,3,4,5,7,8,12,13,14,15,16,21,22,27,28,29,30,31,32,40,41,42,43,58,59,60,61,70,71,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,107,111,115,118,120,123,125,127,129,130,131,132,],[23,23,-5,-6,-8,-9,-13,-26,-27,-28,-29,-63,-64,23,-38,-39,-34,-35,-24,-36,-37,-4,-33,-7,-10,-11,-12,-32,-29,23,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,23,23,23,-61,-65,-66,23,-25,-67,-62,]),'PRINT':([0,3,4,5,7,8,12,13,14,15,16,21,22,27,28,29,30,31,32,40,41,42,43,58,59,60,61,70,71,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,107,111,115,118,120,123,125,127,129,130,131,132,],[24,24,-5,-6,-8,-9,-13,-26,-27,-28,-29,-63,-64,24,-38,-39,-34,-35,-24,-36,-37,-4,-33,-7,-10,-11,-12,-32,-29,24,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,24,24,24,-61,-65,-66,24,-25,-67,-62,]),'{':([0,3,4,5,7,8,12,13,14,15,16,21,22,27,28,29,30,31,32,40,41,42,43,58,59,60,61,70,71,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,107,111,115,118,120,123,125,127,129,130,131,132,],[27,27,-5,-6,-8,-9,-13,-26,-27,-28,-29,-63,-64,27,-38,-39,-34,-35,-24,-36,-37,-4,-33,-7,-10,-11,-12,-32,-29,27,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,27,27,27,-61,-65,-66,27,-25,-67,-62,]),'ID':([0,3,4,5,7,8,12,13,14,15,16,19,21,22,23,24,27,28,29,30,31,32,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,106,107,109,111,113,114,115,117,118,120,123,125,126,127,129,130,131,132,],[32,32,-5,-6,-8,-9,-13,-26,-27,-28,-29,32,-63,-64,32,32,32,-38,-39,-34,-35,-24,79,-36,-37,-4,-33,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-7,-10,-11,-12,32,32,32,32,32,32,32,-32,-29,32,32,32,32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,32,-18,32,-30,32,32,32,32,32,32,-61,-65,32,-66,32,-25,-67,-62,]),'EYE':([0,3,4,5,7,8,12,13,14,15,16,19,21,22,23,24,27,28,29,30,31,32,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,106,107,109,111,113,114,115,117,118,120,123,125,126,127,129,130,131,132,],[33,33,-5,-6,-8,-9,-13,-26,-27,-28,-29,33,-63,-64,33,33,33,-38,-39,-34,-35,-24,-36,-37,-4,-33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-7,-10,-11,-12,33,33,33,33,33,33,33,-32,-29,33,33,33,33,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,33,-18,33,-30,33,33,33,33,33,33,-61,-65,33,-66,33,-25,-67,-62,]),'ZEROS':([0,3,4,5,7,8,12,13,14,15,16,19,21,22,23,24,27,28,29,30,31,32,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,106,107,109,111,113,114,115,117,118,120,123,125,126,127,129,130,131,132,],[34,34,-5,-6,-8,-9,-13,-26,-27,-28,-29,34,-63,-64,34,34,34,-38,-39,-34,-35,-24,-36,-37,-4,-33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-7,-10,-11,-12,34,34,34,34,34,34,34,-32,-29,34,34,34,34,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,34,-18,34,-30,34,34,34,34,34,34,-61,-65,34,-66,34,-25,-67,-62,]),'ONES':([0,3,4,5,7,8,12,13,14,15,16,19,21,22,23,24,27,28,29,30,31,32,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,106,107,109,111,113,114,115,117,118,120,123,125,126,127,129,130,131,132,],[35,35,-5,-6,-8,-9,-13,-26,-27,-28,-29,35,-63,-64,35,35,35,-38,-39,-34,-35,-24,-36,-37,-4,-33,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-7,-10,-11,-12,35,35,35,35,35,35,35,-32,-29,35,35,35,35,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,35,-18,35,-30,35,35,35,35,35,35,-61,-65,35,-66,35,-25,-67,-62,]),'FOR':([0,3,4,5,7,8,12,13,14,15,16,21,22,27,28,29,30,31,32,40,41,42,43,58,59,60,61,70,71,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,107,111,115,118,120,123,125,127,129,130,131,132,],[36,36,-5,-6,-8,-9,-13,-26,-27,-28,-29,-63,-64,36,-38,-39,-34,-35,-24,-36,-37,-4,-33,-7,-10,-11,-12,-32,-29,36,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,36,36,36,-61,-65,-66,36,-25,-67,-62,]),'WHILE':([0,3,4,5,7,8,12,13,14,15,16,21,22,27,28,29,30,31,32,40,41,42,43,58,59,60,61,70,71,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,107,111,115,118,120,123,125,127,129,130,131,132,],[37,37,-5,-6,-8,-9,-13,-26,-27,-28,-29,-63,-64,37,-38,-39,-34,-35,-24,-36,-37,-4,-33,-7,-10,-11,-12,-32,-29,37,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,37,37,37,-61,-65,-66,37,-25,-67,-62,]),'BREAK':([0,3,4,5,7,8,12,13,14,15,16,21,22,27,28,29,30,31,32,40,41,42,43,58,59,60,61,70,71,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,107,111,115,118,120,123,125,127,129,130,131,132,],[38,38,-5,-6,-8,-9,-13,-26,-27,-28,-29,-63,-64,38,-38,-39,-34,-35,-24,-36,-37,-4,-33,-7,-10,-11,-12,-32,-29,38,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,38,38,38,-61,-65,-66,38,-25,-67,-62,]),'CONTINUE':([0,3,4,5,7,8,12,13,14,15,16,21,22,27,28,29,30,31,32,40,41,42,43,58,59,60,61,70,71,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,107,111,115,118,120,123,125,127,129,130,131,132,],[39,39,-5,-6,-8,-9,-13,-26,-27,-28,-29,-63,-64,39,-38,-39,-34,-35,-24,-36,-37,-4,-33,-7,-10,-11,-12,-32,-29,39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,39,39,39,-61,-65,-66,39,-25,-67,-62,]),'INTNUM':([0,3,4,5,7,8,12,13,14,15,16,19,21,22,23,24,27,28,29,30,31,32,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,106,107,109,111,113,114,115,117,118,120,123,125,126,127,129,130,131,132,],[40,40,-5,-6,-8,-9,-13,-26,-27,-28,-29,40,-63,-64,40,40,40,-38,-39,-34,-35,-24,-36,-37,-4,-33,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-7,-10,-11,-12,40,40,40,40,40,40,40,-32,-29,40,40,40,40,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,40,-18,40,-30,40,40,40,40,40,40,-61,-65,40,-66,40,-25,-67,-62,]),'FLOATNUM':([0,3,4,5,7,8,12,13,14,15,16,19,21,22,23,24,27,28,29,30,31,32,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,106,107,109,111,113,114,115,117,118,120,123,125,126,127,129,130,131,132,],[41,41,-5,-6,-8,-9,-13,-26,-27,-28,-29,41,-63,-64,41,41,41,-38,-39,-34,-35,-24,-36,-37,-4,-33,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-7,-10,-11,-12,41,41,41,41,41,41,41,-32,-29,41,41,41,41,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,41,-18,41,-30,41,41,41,41,41,41,-61,-65,41,-66,41,-25,-67,-62,]),'}':([4,5,7,8,12,13,14,15,16,21,22,28,29,30,31,32,40,41,42,43,58,59,60,61,70,71,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,107,111,123,125,127,130,132,],[-5,-6,-8,-9,-13,-26,-27,-28,-29,-63,-64,-38,-39,-34,-35,-24,-36,-37,-4,-33,-7,-10,-11,-12,-32,-29,107,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,-61,-65,-66,-25,-62,]),'ELSE':([5,7,8,12,13,14,15,16,21,22,28,29,30,31,32,40,41,43,58,59,60,61,70,71,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,107,111,123,125,127,130,132,],[-6,-8,-9,-13,-26,-27,-28,-29,-63,-64,-38,-39,-34,-35,-24,-36,-37,-33,-7,-10,-11,-12,-32,-29,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,129,-65,-66,-25,-62,]),"'":([5,13,14,15,16,28,29,30,31,32,40,41,43,70,71,73,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,108,110,111,116,119,121,124,130,131,],[43,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,-32,-29,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-31,43,43,43,-30,43,43,43,43,-25,43,]),'+':([5,13,14,15,16,28,29,30,31,32,40,41,43,70,71,73,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,108,110,111,116,119,121,124,130,131,],[44,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,-32,-29,44,44,-40,-41,-42,-43,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-31,44,44,44,-30,44,44,44,44,-25,44,]),'*':([5,13,14,15,16,28,29,30,31,32,40,41,43,70,71,73,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,108,110,111,116,119,121,124,130,131,],[46,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,-32,-29,46,46,46,46,-42,-43,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-31,46,46,46,-30,46,46,46,46,-25,46,]),'/':([5,13,14,15,16,28,29,30,31,32,40,41,43,70,71,73,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,108,110,111,116,119,121,124,130,131,],[47,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,-32,-29,47,47,47,47,-42,-43,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-31,47,47,47,-30,47,47,47,47,-25,47,]),'DOTADD':([5,13,14,15,16,28,29,30,31,32,40,41,43,70,71,73,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,108,110,111,116,119,121,124,130,131,],[48,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,-32,-29,48,48,-40,-41,-42,-43,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-31,48,48,48,-30,48,48,48,48,-25,48,]),'DOTSUB':([5,13,14,15,16,28,29,30,31,32,40,41,43,70,71,73,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,108,110,111,116,119,121,124,130,131,],[49,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,-32,-29,49,49,-40,-41,-42,-43,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-31,49,49,49,-30,49,49,49,49,-25,49,]),'DOTMUL':([5,13,14,15,16,28,29,30,31,32,40,41,43,70,71,73,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,108,110,111,116,119,121,124,130,131,],[50,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,-32,-29,50,50,-40,-41,-42,-43,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-31,50,50,50,-30,50,50,50,50,-25,50,]),'DOTDIV':([5,13,14,15,16,28,29,30,31,32,40,41,43,70,71,73,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,108,110,111,116,119,121,124,130,131,],[51,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,-32,-29,51,51,-40,-41,-42,-43,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-31,51,51,51,-30,51,51,51,51,-25,51,]),'LE':([5,13,14,15,16,28,29,30,31,32,40,41,43,70,71,73,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,108,110,111,116,119,121,124,130,131,],[52,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,-32,-29,52,52,-40,-41,-42,-43,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-31,52,52,52,-30,52,52,52,52,-25,52,]),'GE':([5,13,14,15,16,28,29,30,31,32,40,41,43,70,71,73,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,108,110,111,116,119,121,124,130,131,],[53,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,-32,-29,53,53,-40,-41,-42,-43,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-31,53,53,53,-30,53,53,53,53,-25,53,]),'EQ':([5,13,14,15,16,28,29,30,31,32,40,41,43,70,71,73,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,108,110,111,116,119,121,124,130,131,],[54,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,-32,-29,54,54,-40,-41,-42,-43,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-31,54,54,54,-30,54,54,54,54,-25,54,]),'>':([5,13,14,15,16,28,29,30,31,32,40,41,43,70,71,73,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,108,110,111,116,119,121,124,130,131,],[55,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,-32,-29,55,55,-40,-41,-42,-43,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-31,55,55,55,-30,55,55,55,55,-25,55,]),'<':([5,13,14,15,16,28,29,30,31,32,40,41,43,70,71,73,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,108,110,111,116,119,121,124,130,131,],[56,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,-32,-29,56,56,-40,-41,-42,-43,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-31,56,56,56,-30,56,56,56,56,-25,56,]),'DIFF':([5,13,14,15,16,28,29,30,31,32,40,41,43,70,71,73,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,108,110,111,116,119,121,124,130,131,],[57,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,-32,-29,57,57,-40,-41,-42,-43,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-31,57,57,57,-30,57,57,57,57,-25,57,]),';':([6,9,10,11,13,14,15,25,26,28,29,30,31,32,38,39,40,41,43,70,71,73,74,75,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,103,111,116,130,],[58,59,60,61,-26,-27,-28,-14,-15,-38,-39,-34,-35,-24,-16,-17,-36,-37,-33,-32,-29,-68,-69,-70,-71,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-19,-20,-21,-22,-23,-31,-30,-72,-25,]),',':([13,14,15,28,29,30,31,32,40,41,43,69,70,71,74,75,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,101,102,103,108,111,112,116,121,122,128,130,],[-26,-27,-28,-38,-39,-34,-35,-24,-36,-37,-33,104,-32,-29,106,-70,-71,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,113,-59,-31,117,-30,-58,-72,-60,113,-57,-25,]),')':([13,14,15,28,29,30,31,32,40,41,43,70,71,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,103,105,110,111,130,],[-26,-27,-28,-38,-39,-34,-35,-24,-36,-37,-33,-32,-29,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,111,-31,115,120,-30,-25,]),']':([13,14,15,28,29,30,31,32,40,41,43,69,70,71,81,82,83,84,85,86,87,88,89,90,91,92,93,94,101,102,103,111,112,121,122,124,128,130,],[-26,-27,-28,-38,-39,-34,-35,-24,-36,-37,-33,103,-32,-29,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,112,-59,-31,-30,-58,-60,128,130,-57,-25,]),':':([13,14,15,28,29,30,31,32,40,41,43,70,71,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,111,119,130,],[-26,-27,-28,-38,-39,-34,-35,-24,-36,-37,-33,-32,-29,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-30,126,-25,]),'=':([16,32,79,130,],[62,-24,109,-25,]),'ADDASSIGN':([16,32,130,],[63,-24,-25,]),'SUBASSIGN':([16,32,130,],[64,-24,-25,]),'MULASSIGN':([16,32,130,],[65,-24,-25,]),'DIVASSIGN':([16,32,130,],[66,-24,-25,]),'(':([17,20,33,34,35,37,],[67,72,-54,-55,-56,80,]),'STRING':([24,],[75,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,27,],[3,77,]),'instruction':([0,3,27,77,115,118,120,129,],[4,42,4,42,123,125,127,132,]),'expression':([0,3,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,72,77,78,80,106,109,113,114,115,117,118,120,126,129,],[5,5,70,73,76,5,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,5,108,110,116,119,121,102,5,124,5,5,131,5,]),'assignment':([0,3,27,77,115,118,120,129,],[6,6,6,6,6,6,6,6,]),'ifexpr':([0,3,27,77,115,118,120,129,],[7,7,7,7,7,7,7,7,]),'loop':([0,3,27,77,115,118,120,129,],[8,8,8,8,8,8,8,8,]),'returnexpr':([0,3,27,77,115,118,120,129,],[9,9,9,9,9,9,9,9,]),'printexpr':([0,3,27,77,115,118,120,129,],[10,10,10,10,10,10,10,10,]),'breakOrContinue':([0,3,27,77,115,118,120,129,],[11,11,11,11,11,11,11,11,]),'complexinstruction':([0,3,27,77,115,118,120,129,],[12,12,12,12,12,12,12,12,]),'binexp':([0,3,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,72,77,78,80,106,109,113,114,115,117,118,120,126,129,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'transpose':([0,3,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,72,77,78,80,106,109,113,114,115,117,118,120,126,129,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'num':([0,3,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,72,77,78,80,106,109,113,114,115,117,118,120,126,129,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'assignable':([0,3,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,72,77,78,80,106,109,113,114,115,117,118,120,126,129,],[16,16,71,71,71,16,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,16,71,71,71,71,71,71,16,71,16,16,71,16,]),'special':([0,3,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,72,77,78,80,106,109,113,114,115,117,118,120,126,129,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'forloop':([0,3,27,77,115,118,120,129,],[21,21,21,21,21,21,21,21,]),'whileloop':([0,3,27,77,115,118,120,129,],[22,22,22,22,22,22,22,22,]),'brk':([0,3,27,77,115,118,120,129,],[25,25,25,25,25,25,25,25,]),'cnt':([0,3,27,77,115,118,120,129,],[26,26,26,26,26,26,26,26,]),'mutexp':([0,3,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,72,77,78,80,106,109,113,114,115,117,118,120,126,129,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'compexp':([0,3,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,72,77,78,80,106,109,113,114,115,117,118,120,126,129,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'int':([0,3,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,72,77,78,80,106,109,113,114,115,117,118,120,126,129,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'float':([0,3,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,72,77,78,80,106,109,113,114,115,117,118,120,126,129,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'minit':([18,],[69,]),'printable':([24,],[74,]),'matrixcontents':([68,114,],[101,122,]),'range':([109,],[118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',31),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',36),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','Mparser.py',41),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',45),
  ('instructions -> instruction','instructions',1,'p_instructions_2','Mparser.py',50),
  ('instruction -> expression','instruction',1,'p_instruction','Mparser.py',55),
  ('instruction -> assignment ;','instruction',2,'p_instruction','Mparser.py',56),
  ('instruction -> ifexpr','instruction',1,'p_instruction','Mparser.py',57),
  ('instruction -> loop','instruction',1,'p_instruction','Mparser.py',58),
  ('instruction -> returnexpr ;','instruction',2,'p_instruction','Mparser.py',59),
  ('instruction -> printexpr ;','instruction',2,'p_instruction','Mparser.py',60),
  ('instruction -> breakOrContinue ;','instruction',2,'p_instruction','Mparser.py',61),
  ('instruction -> complexinstruction','instruction',1,'p_instruction','Mparser.py',62),
  ('breakOrContinue -> brk','breakOrContinue',1,'p_breakOrContinue','Mparser.py',67),
  ('breakOrContinue -> cnt','breakOrContinue',1,'p_breakOrContinue','Mparser.py',68),
  ('brk -> BREAK','brk',1,'p_brk','Mparser.py',73),
  ('cnt -> CONTINUE','cnt',1,'p_cnt','Mparser.py',78),
  ('complexinstruction -> { instructions }','complexinstruction',3,'p_complexinstruction','Mparser.py',82),
  ('assignment -> assignable = expression','assignment',3,'p_assignment','Mparser.py',87),
  ('assignment -> assignable ADDASSIGN expression','assignment',3,'p_assignment','Mparser.py',88),
  ('assignment -> assignable SUBASSIGN expression','assignment',3,'p_assignment','Mparser.py',89),
  ('assignment -> assignable MULASSIGN expression','assignment',3,'p_assignment','Mparser.py',90),
  ('assignment -> assignable DIVASSIGN expression','assignment',3,'p_assignment','Mparser.py',91),
  ('assignable -> ID','assignable',1,'p_assignable','Mparser.py',96),
  ('assignable -> ID [ expression , expression ]','assignable',6,'p_assignable','Mparser.py',97),
  ('expression -> binexp','expression',1,'p_expression','Mparser.py',105),
  ('expression -> transpose','expression',1,'p_expression','Mparser.py',106),
  ('expression -> num','expression',1,'p_expression','Mparser.py',107),
  ('expression -> assignable','expression',1,'p_expression','Mparser.py',108),
  ('expression -> special ( expression )','expression',4,'p_expression','Mparser.py',109),
  ('expression -> [ minit ]','expression',3,'p_expression','Mparser.py',110),
  ('expression -> - expression','expression',2,'p_expression','Mparser.py',111),
  ("transpose -> expression '",'transpose',2,'p_transpose','Mparser.py',123),
  ('num -> int','num',1,'p_num','Mparser.py',129),
  ('num -> float','num',1,'p_num','Mparser.py',130),
  ('int -> INTNUM','int',1,'p_int','Mparser.py',135),
  ('float -> FLOATNUM','float',1,'p_float','Mparser.py',140),
  ('binexp -> mutexp','binexp',1,'p_binexp','Mparser.py',145),
  ('binexp -> compexp','binexp',1,'p_binexp','Mparser.py',146),
  ('mutexp -> expression + expression','mutexp',3,'p_mutexp','Mparser.py',151),
  ('mutexp -> expression - expression','mutexp',3,'p_mutexp','Mparser.py',152),
  ('mutexp -> expression * expression','mutexp',3,'p_mutexp','Mparser.py',153),
  ('mutexp -> expression / expression','mutexp',3,'p_mutexp','Mparser.py',154),
  ('mutexp -> expression DOTADD expression','mutexp',3,'p_mutexp','Mparser.py',155),
  ('mutexp -> expression DOTSUB expression','mutexp',3,'p_mutexp','Mparser.py',156),
  ('mutexp -> expression DOTMUL expression','mutexp',3,'p_mutexp','Mparser.py',157),
  ('mutexp -> expression DOTDIV expression','mutexp',3,'p_mutexp','Mparser.py',158),
  ('compexp -> expression LE expression','compexp',3,'p_compexp','Mparser.py',163),
  ('compexp -> expression GE expression','compexp',3,'p_compexp','Mparser.py',164),
  ('compexp -> expression EQ expression','compexp',3,'p_compexp','Mparser.py',165),
  ('compexp -> expression > expression','compexp',3,'p_compexp','Mparser.py',166),
  ('compexp -> expression < expression','compexp',3,'p_compexp','Mparser.py',167),
  ('compexp -> expression DIFF expression','compexp',3,'p_compexp','Mparser.py',168),
  ('special -> EYE','special',1,'p_special','Mparser.py',173),
  ('special -> ZEROS','special',1,'p_special','Mparser.py',174),
  ('special -> ONES','special',1,'p_special','Mparser.py',175),
  ('minit -> minit , [ matrixcontents ]','minit',5,'p_minit','Mparser.py',180),
  ('minit -> [ matrixcontents ]','minit',3,'p_minit','Mparser.py',181),
  ('matrixcontents -> expression','matrixcontents',1,'p_matrixcontents','Mparser.py',190),
  ('matrixcontents -> matrixcontents , expression','matrixcontents',3,'p_matrixcontents','Mparser.py',191),
  ('ifexpr -> IF ( expression ) instruction','ifexpr',5,'p_ifexpr','Mparser.py',199),
  ('ifexpr -> IF ( expression ) instruction ELSE instruction','ifexpr',7,'p_ifexpr','Mparser.py',200),
  ('loop -> forloop','loop',1,'p_loop','Mparser.py',208),
  ('loop -> whileloop','loop',1,'p_loop','Mparser.py',209),
  ('forloop -> FOR ID = range instruction','forloop',5,'p_forloop','Mparser.py',214),
  ('whileloop -> WHILE ( expression ) instruction','whileloop',5,'p_whileloop','Mparser.py',219),
  ('range -> expression : expression','range',3,'p_range','Mparser.py',224),
  ('returnexpr -> RETURN expression','returnexpr',2,'p_returnexpr','Mparser.py',229),
  ('printexpr -> PRINT printable','printexpr',2,'p_printexpr','Mparser.py',234),
  ('printable -> STRING','printable',1,'p_printable','Mparser.py',239),
  ('printable -> expression','printable',1,'p_printable','Mparser.py',240),
  ('printable -> printable , expression','printable',3,'p_printable','Mparser.py',241),
]
