Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> <empty>
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     instruction -> expression
Rule 7     instruction -> assignment ;
Rule 8     instruction -> ifexpr
Rule 9     instruction -> loop
Rule 10    instruction -> returnexpr ;
Rule 11    instruction -> printexpr ;
Rule 12    instruction -> BREAK ;
Rule 13    instruction -> CONTINUE ;
Rule 14    instruction -> complexinstruction
Rule 15    complexinstruction -> { instructions }
Rule 16    assignment -> assignable = expression
Rule 17    assignment -> assignable ADDASSIGN expression
Rule 18    assignment -> assignable SUBASSIGN expression
Rule 19    assignment -> assignable MULASSIGN expression
Rule 20    assignment -> assignable DIVASSIGN expression
Rule 21    assignable -> ID
Rule 22    assignable -> matrixelement
Rule 23    matrixelement -> ID [ expression , expression ]
Rule 24    expression -> expression + expression
Rule 25    expression -> expression - expression
Rule 26    expression -> expression * expression
Rule 27    expression -> expression / expression
Rule 28    expression -> expression DOTADD expression
Rule 29    expression -> expression DOTSUB expression
Rule 30    expression -> expression DOTMUL expression
Rule 31    expression -> expression DOTDIV expression
Rule 32    expression -> expression LE expression
Rule 33    expression -> expression GE expression
Rule 34    expression -> expression EQ expression
Rule 35    expression -> expression > expression
Rule 36    expression -> expression < expression
Rule 37    expression -> expression DIFF expression
Rule 38    expression -> expression '
Rule 39    expression -> INTNUM
Rule 40    expression -> FLOATNUM
Rule 41    expression -> assignable
Rule 42    expression -> special ( expression )
Rule 43    expression -> [ minit ]
Rule 44    expression -> - expression
Rule 45    special -> EYE
Rule 46    special -> ZEROS
Rule 47    special -> ONES
Rule 48    minit -> minit , [ matrixcontents ]
Rule 49    minit -> [ matrixcontents ]
Rule 50    matrixcontents -> expression
Rule 51    matrixcontents -> matrixcontents , expression
Rule 52    ifexpr -> IF ( expression ) instruction
Rule 53    ifexpr -> IF ( expression ) instruction ELSE instruction
Rule 54    loop -> forloop
Rule 55    loop -> whileloop
Rule 56    forloop -> FOR ID = range instruction
Rule 57    whileloop -> WHILE ( expression ) instruction
Rule 58    range -> expression : expression
Rule 59    returnexpr -> RETURN expression
Rule 60    printexpr -> PRINT printable
Rule 61    printable -> STRING
Rule 62    printable -> expression
Rule 63    printable -> printable , expression

Terminals, with rules where they appear

'                    : 38
(                    : 42 52 53 57
)                    : 42 52 53 57
*                    : 26
+                    : 24
,                    : 23 48 51 63
-                    : 25 44
/                    : 27
:                    : 58
;                    : 7 10 11 12 13
<                    : 36
=                    : 16 56
>                    : 35
ADDASSIGN            : 17
BREAK                : 12
CONTINUE             : 13
DIFF                 : 37
DIVASSIGN            : 20
DOTADD               : 28
DOTDIV               : 31
DOTMUL               : 30
DOTSUB               : 29
ELSE                 : 53
EQ                   : 34
EYE                  : 45
FLOATNUM             : 40
FOR                  : 56
GE                   : 33
ID                   : 21 23 56
IF                   : 52 53
INTNUM               : 39
LE                   : 32
MULASSIGN            : 19
ONES                 : 47
PRINT                : 60
RETURN               : 59
STRING               : 61
SUBASSIGN            : 18
WHILE                : 57
ZEROS                : 46
[                    : 23 43 48 49
]                    : 23 43 48 49
error                : 
{                    : 15
}                    : 15

Nonterminals, with rules where they appear

assignable           : 16 17 18 19 20 41
assignment           : 7
complexinstruction   : 14
expression           : 6 16 17 18 19 20 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 42 44 50 51 52 53 57 58 58 59 62 63
forloop              : 54
ifexpr               : 8
instruction          : 4 5 52 53 53 56 57
instructions         : 2 4 15
instructions_opt     : 1
loop                 : 9
matrixcontents       : 48 49 51
matrixelement        : 22
minit                : 43 48
printable            : 60 63
printexpr            : 11
program              : 0
range                : 56
returnexpr           : 10
special              : 42
whileloop            : 55

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> .
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . expression
    (7) instruction -> . assignment ;
    (8) instruction -> . ifexpr
    (9) instruction -> . loop
    (10) instruction -> . returnexpr ;
    (11) instruction -> . printexpr ;
    (12) instruction -> . BREAK ;
    (13) instruction -> . CONTINUE ;
    (14) instruction -> . complexinstruction
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (16) assignment -> . assignable = expression
    (17) assignment -> . assignable ADDASSIGN expression
    (18) assignment -> . assignable SUBASSIGN expression
    (19) assignment -> . assignable MULASSIGN expression
    (20) assignment -> . assignable DIVASSIGN expression
    (52) ifexpr -> . IF ( expression ) instruction
    (53) ifexpr -> . IF ( expression ) instruction ELSE instruction
    (54) loop -> . forloop
    (55) loop -> . whileloop
    (59) returnexpr -> . RETURN expression
    (60) printexpr -> . PRINT printable
    (15) complexinstruction -> . { instructions }
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (56) forloop -> . FOR ID = range instruction
    (57) whileloop -> . WHILE ( expression ) instruction
    (23) matrixelement -> . ID [ expression , expression ]

    $end            reduce using rule 3 (instructions_opt -> .)
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    IF              shift and go to state 20
    RETURN          shift and go to state 23
    PRINT           shift and go to state 24
    {               shift and go to state 25
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    instruction                    shift and go to state 4
    expression                     shift and go to state 5
    assignment                     shift and go to state 6
    ifexpr                         shift and go to state 7
    loop                           shift and go to state 8
    returnexpr                     shift and go to state 9
    printexpr                      shift and go to state 10
    complexinstruction             shift and go to state 13
    assignable                     shift and go to state 17
    special                        shift and go to state 18
    forloop                        shift and go to state 21
    whileloop                      shift and go to state 22
    matrixelement                  shift and go to state 27

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . expression
    (7) instruction -> . assignment ;
    (8) instruction -> . ifexpr
    (9) instruction -> . loop
    (10) instruction -> . returnexpr ;
    (11) instruction -> . printexpr ;
    (12) instruction -> . BREAK ;
    (13) instruction -> . CONTINUE ;
    (14) instruction -> . complexinstruction
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (16) assignment -> . assignable = expression
    (17) assignment -> . assignable ADDASSIGN expression
    (18) assignment -> . assignable SUBASSIGN expression
    (19) assignment -> . assignable MULASSIGN expression
    (20) assignment -> . assignable DIVASSIGN expression
    (52) ifexpr -> . IF ( expression ) instruction
    (53) ifexpr -> . IF ( expression ) instruction ELSE instruction
    (54) loop -> . forloop
    (55) loop -> . whileloop
    (59) returnexpr -> . RETURN expression
    (60) printexpr -> . PRINT printable
    (15) complexinstruction -> . { instructions }
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (56) forloop -> . FOR ID = range instruction
    (57) whileloop -> . WHILE ( expression ) instruction
    (23) matrixelement -> . ID [ expression , expression ]

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    IF              shift and go to state 20
    RETURN          shift and go to state 23
    PRINT           shift and go to state 24
    {               shift and go to state 25
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32

    instruction                    shift and go to state 33
    expression                     shift and go to state 5
    assignment                     shift and go to state 6
    ifexpr                         shift and go to state 7
    loop                           shift and go to state 8
    returnexpr                     shift and go to state 9
    printexpr                      shift and go to state 10
    complexinstruction             shift and go to state 13
    assignable                     shift and go to state 17
    special                        shift and go to state 18
    forloop                        shift and go to state 21
    whileloop                      shift and go to state 22
    matrixelement                  shift and go to state 27

state 4

    (5) instructions -> instruction .

    BREAK           reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    INTNUM          reduce using rule 5 (instructions -> instruction .)
    FLOATNUM        reduce using rule 5 (instructions -> instruction .)
    [               reduce using rule 5 (instructions -> instruction .)
    -               reduce using rule 5 (instructions -> instruction .)
    IF              reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    {               reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    EYE             reduce using rule 5 (instructions -> instruction .)
    ZEROS           reduce using rule 5 (instructions -> instruction .)
    ONES            reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)
    }               reduce using rule 5 (instructions -> instruction .)


state 5

    (6) instruction -> expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

  ! shift/reduce conflict for - resolved as shift
    BREAK           reduce using rule 6 (instruction -> expression .)
    CONTINUE        reduce using rule 6 (instruction -> expression .)
    INTNUM          reduce using rule 6 (instruction -> expression .)
    FLOATNUM        reduce using rule 6 (instruction -> expression .)
    [               reduce using rule 6 (instruction -> expression .)
    IF              reduce using rule 6 (instruction -> expression .)
    RETURN          reduce using rule 6 (instruction -> expression .)
    PRINT           reduce using rule 6 (instruction -> expression .)
    {               reduce using rule 6 (instruction -> expression .)
    ID              reduce using rule 6 (instruction -> expression .)
    EYE             reduce using rule 6 (instruction -> expression .)
    ZEROS           reduce using rule 6 (instruction -> expression .)
    ONES            reduce using rule 6 (instruction -> expression .)
    FOR             reduce using rule 6 (instruction -> expression .)
    WHILE           reduce using rule 6 (instruction -> expression .)
    $end            reduce using rule 6 (instruction -> expression .)
    }               reduce using rule 6 (instruction -> expression .)
    ELSE            reduce using rule 6 (instruction -> expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48

  ! -               [ reduce using rule 6 (instruction -> expression .) ]


state 6

    (7) instruction -> assignment . ;

    ;               shift and go to state 49


state 7

    (8) instruction -> ifexpr .

    BREAK           reduce using rule 8 (instruction -> ifexpr .)
    CONTINUE        reduce using rule 8 (instruction -> ifexpr .)
    INTNUM          reduce using rule 8 (instruction -> ifexpr .)
    FLOATNUM        reduce using rule 8 (instruction -> ifexpr .)
    [               reduce using rule 8 (instruction -> ifexpr .)
    -               reduce using rule 8 (instruction -> ifexpr .)
    IF              reduce using rule 8 (instruction -> ifexpr .)
    RETURN          reduce using rule 8 (instruction -> ifexpr .)
    PRINT           reduce using rule 8 (instruction -> ifexpr .)
    {               reduce using rule 8 (instruction -> ifexpr .)
    ID              reduce using rule 8 (instruction -> ifexpr .)
    EYE             reduce using rule 8 (instruction -> ifexpr .)
    ZEROS           reduce using rule 8 (instruction -> ifexpr .)
    ONES            reduce using rule 8 (instruction -> ifexpr .)
    FOR             reduce using rule 8 (instruction -> ifexpr .)
    WHILE           reduce using rule 8 (instruction -> ifexpr .)
    $end            reduce using rule 8 (instruction -> ifexpr .)
    }               reduce using rule 8 (instruction -> ifexpr .)
    ELSE            reduce using rule 8 (instruction -> ifexpr .)


state 8

    (9) instruction -> loop .

    BREAK           reduce using rule 9 (instruction -> loop .)
    CONTINUE        reduce using rule 9 (instruction -> loop .)
    INTNUM          reduce using rule 9 (instruction -> loop .)
    FLOATNUM        reduce using rule 9 (instruction -> loop .)
    [               reduce using rule 9 (instruction -> loop .)
    -               reduce using rule 9 (instruction -> loop .)
    IF              reduce using rule 9 (instruction -> loop .)
    RETURN          reduce using rule 9 (instruction -> loop .)
    PRINT           reduce using rule 9 (instruction -> loop .)
    {               reduce using rule 9 (instruction -> loop .)
    ID              reduce using rule 9 (instruction -> loop .)
    EYE             reduce using rule 9 (instruction -> loop .)
    ZEROS           reduce using rule 9 (instruction -> loop .)
    ONES            reduce using rule 9 (instruction -> loop .)
    FOR             reduce using rule 9 (instruction -> loop .)
    WHILE           reduce using rule 9 (instruction -> loop .)
    $end            reduce using rule 9 (instruction -> loop .)
    }               reduce using rule 9 (instruction -> loop .)
    ELSE            reduce using rule 9 (instruction -> loop .)


state 9

    (10) instruction -> returnexpr . ;

    ;               shift and go to state 50


state 10

    (11) instruction -> printexpr . ;

    ;               shift and go to state 51


state 11

    (12) instruction -> BREAK . ;

    ;               shift and go to state 52


state 12

    (13) instruction -> CONTINUE . ;

    ;               shift and go to state 53


state 13

    (14) instruction -> complexinstruction .

    BREAK           reduce using rule 14 (instruction -> complexinstruction .)
    CONTINUE        reduce using rule 14 (instruction -> complexinstruction .)
    INTNUM          reduce using rule 14 (instruction -> complexinstruction .)
    FLOATNUM        reduce using rule 14 (instruction -> complexinstruction .)
    [               reduce using rule 14 (instruction -> complexinstruction .)
    -               reduce using rule 14 (instruction -> complexinstruction .)
    IF              reduce using rule 14 (instruction -> complexinstruction .)
    RETURN          reduce using rule 14 (instruction -> complexinstruction .)
    PRINT           reduce using rule 14 (instruction -> complexinstruction .)
    {               reduce using rule 14 (instruction -> complexinstruction .)
    ID              reduce using rule 14 (instruction -> complexinstruction .)
    EYE             reduce using rule 14 (instruction -> complexinstruction .)
    ZEROS           reduce using rule 14 (instruction -> complexinstruction .)
    ONES            reduce using rule 14 (instruction -> complexinstruction .)
    FOR             reduce using rule 14 (instruction -> complexinstruction .)
    WHILE           reduce using rule 14 (instruction -> complexinstruction .)
    $end            reduce using rule 14 (instruction -> complexinstruction .)
    }               reduce using rule 14 (instruction -> complexinstruction .)
    ELSE            reduce using rule 14 (instruction -> complexinstruction .)


state 14

    (44) expression -> - . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 54
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 15

    (39) expression -> INTNUM .

    +               reduce using rule 39 (expression -> INTNUM .)
    -               reduce using rule 39 (expression -> INTNUM .)
    *               reduce using rule 39 (expression -> INTNUM .)
    /               reduce using rule 39 (expression -> INTNUM .)
    DOTADD          reduce using rule 39 (expression -> INTNUM .)
    DOTSUB          reduce using rule 39 (expression -> INTNUM .)
    DOTMUL          reduce using rule 39 (expression -> INTNUM .)
    DOTDIV          reduce using rule 39 (expression -> INTNUM .)
    LE              reduce using rule 39 (expression -> INTNUM .)
    GE              reduce using rule 39 (expression -> INTNUM .)
    EQ              reduce using rule 39 (expression -> INTNUM .)
    >               reduce using rule 39 (expression -> INTNUM .)
    <               reduce using rule 39 (expression -> INTNUM .)
    DIFF            reduce using rule 39 (expression -> INTNUM .)
    '               reduce using rule 39 (expression -> INTNUM .)
    BREAK           reduce using rule 39 (expression -> INTNUM .)
    CONTINUE        reduce using rule 39 (expression -> INTNUM .)
    INTNUM          reduce using rule 39 (expression -> INTNUM .)
    FLOATNUM        reduce using rule 39 (expression -> INTNUM .)
    [               reduce using rule 39 (expression -> INTNUM .)
    IF              reduce using rule 39 (expression -> INTNUM .)
    RETURN          reduce using rule 39 (expression -> INTNUM .)
    PRINT           reduce using rule 39 (expression -> INTNUM .)
    {               reduce using rule 39 (expression -> INTNUM .)
    ID              reduce using rule 39 (expression -> INTNUM .)
    EYE             reduce using rule 39 (expression -> INTNUM .)
    ZEROS           reduce using rule 39 (expression -> INTNUM .)
    ONES            reduce using rule 39 (expression -> INTNUM .)
    FOR             reduce using rule 39 (expression -> INTNUM .)
    WHILE           reduce using rule 39 (expression -> INTNUM .)
    $end            reduce using rule 39 (expression -> INTNUM .)
    ;               reduce using rule 39 (expression -> INTNUM .)
    ,               reduce using rule 39 (expression -> INTNUM .)
    }               reduce using rule 39 (expression -> INTNUM .)
    )               reduce using rule 39 (expression -> INTNUM .)
    ]               reduce using rule 39 (expression -> INTNUM .)
    :               reduce using rule 39 (expression -> INTNUM .)
    ELSE            reduce using rule 39 (expression -> INTNUM .)


state 16

    (40) expression -> FLOATNUM .

    +               reduce using rule 40 (expression -> FLOATNUM .)
    -               reduce using rule 40 (expression -> FLOATNUM .)
    *               reduce using rule 40 (expression -> FLOATNUM .)
    /               reduce using rule 40 (expression -> FLOATNUM .)
    DOTADD          reduce using rule 40 (expression -> FLOATNUM .)
    DOTSUB          reduce using rule 40 (expression -> FLOATNUM .)
    DOTMUL          reduce using rule 40 (expression -> FLOATNUM .)
    DOTDIV          reduce using rule 40 (expression -> FLOATNUM .)
    LE              reduce using rule 40 (expression -> FLOATNUM .)
    GE              reduce using rule 40 (expression -> FLOATNUM .)
    EQ              reduce using rule 40 (expression -> FLOATNUM .)
    >               reduce using rule 40 (expression -> FLOATNUM .)
    <               reduce using rule 40 (expression -> FLOATNUM .)
    DIFF            reduce using rule 40 (expression -> FLOATNUM .)
    '               reduce using rule 40 (expression -> FLOATNUM .)
    BREAK           reduce using rule 40 (expression -> FLOATNUM .)
    CONTINUE        reduce using rule 40 (expression -> FLOATNUM .)
    INTNUM          reduce using rule 40 (expression -> FLOATNUM .)
    FLOATNUM        reduce using rule 40 (expression -> FLOATNUM .)
    [               reduce using rule 40 (expression -> FLOATNUM .)
    IF              reduce using rule 40 (expression -> FLOATNUM .)
    RETURN          reduce using rule 40 (expression -> FLOATNUM .)
    PRINT           reduce using rule 40 (expression -> FLOATNUM .)
    {               reduce using rule 40 (expression -> FLOATNUM .)
    ID              reduce using rule 40 (expression -> FLOATNUM .)
    EYE             reduce using rule 40 (expression -> FLOATNUM .)
    ZEROS           reduce using rule 40 (expression -> FLOATNUM .)
    ONES            reduce using rule 40 (expression -> FLOATNUM .)
    FOR             reduce using rule 40 (expression -> FLOATNUM .)
    WHILE           reduce using rule 40 (expression -> FLOATNUM .)
    $end            reduce using rule 40 (expression -> FLOATNUM .)
    ;               reduce using rule 40 (expression -> FLOATNUM .)
    ,               reduce using rule 40 (expression -> FLOATNUM .)
    }               reduce using rule 40 (expression -> FLOATNUM .)
    )               reduce using rule 40 (expression -> FLOATNUM .)
    ]               reduce using rule 40 (expression -> FLOATNUM .)
    :               reduce using rule 40 (expression -> FLOATNUM .)
    ELSE            reduce using rule 40 (expression -> FLOATNUM .)


state 17

    (41) expression -> assignable .
    (16) assignment -> assignable . = expression
    (17) assignment -> assignable . ADDASSIGN expression
    (18) assignment -> assignable . SUBASSIGN expression
    (19) assignment -> assignable . MULASSIGN expression
    (20) assignment -> assignable . DIVASSIGN expression

    +               reduce using rule 41 (expression -> assignable .)
    -               reduce using rule 41 (expression -> assignable .)
    *               reduce using rule 41 (expression -> assignable .)
    /               reduce using rule 41 (expression -> assignable .)
    DOTADD          reduce using rule 41 (expression -> assignable .)
    DOTSUB          reduce using rule 41 (expression -> assignable .)
    DOTMUL          reduce using rule 41 (expression -> assignable .)
    DOTDIV          reduce using rule 41 (expression -> assignable .)
    LE              reduce using rule 41 (expression -> assignable .)
    GE              reduce using rule 41 (expression -> assignable .)
    EQ              reduce using rule 41 (expression -> assignable .)
    >               reduce using rule 41 (expression -> assignable .)
    <               reduce using rule 41 (expression -> assignable .)
    DIFF            reduce using rule 41 (expression -> assignable .)
    '               reduce using rule 41 (expression -> assignable .)
    BREAK           reduce using rule 41 (expression -> assignable .)
    CONTINUE        reduce using rule 41 (expression -> assignable .)
    INTNUM          reduce using rule 41 (expression -> assignable .)
    FLOATNUM        reduce using rule 41 (expression -> assignable .)
    [               reduce using rule 41 (expression -> assignable .)
    IF              reduce using rule 41 (expression -> assignable .)
    RETURN          reduce using rule 41 (expression -> assignable .)
    PRINT           reduce using rule 41 (expression -> assignable .)
    {               reduce using rule 41 (expression -> assignable .)
    ID              reduce using rule 41 (expression -> assignable .)
    EYE             reduce using rule 41 (expression -> assignable .)
    ZEROS           reduce using rule 41 (expression -> assignable .)
    ONES            reduce using rule 41 (expression -> assignable .)
    FOR             reduce using rule 41 (expression -> assignable .)
    WHILE           reduce using rule 41 (expression -> assignable .)
    $end            reduce using rule 41 (expression -> assignable .)
    }               reduce using rule 41 (expression -> assignable .)
    ELSE            reduce using rule 41 (expression -> assignable .)
    =               shift and go to state 56
    ADDASSIGN       shift and go to state 57
    SUBASSIGN       shift and go to state 58
    MULASSIGN       shift and go to state 59
    DIVASSIGN       shift and go to state 60


state 18

    (42) expression -> special . ( expression )

    (               shift and go to state 61


state 19

    (43) expression -> [ . minit ]
    (48) minit -> . minit , [ matrixcontents ]
    (49) minit -> . [ matrixcontents ]

    [               shift and go to state 62

    minit                          shift and go to state 63

state 20

    (52) ifexpr -> IF . ( expression ) instruction
    (53) ifexpr -> IF . ( expression ) instruction ELSE instruction

    (               shift and go to state 64


state 21

    (54) loop -> forloop .

    BREAK           reduce using rule 54 (loop -> forloop .)
    CONTINUE        reduce using rule 54 (loop -> forloop .)
    INTNUM          reduce using rule 54 (loop -> forloop .)
    FLOATNUM        reduce using rule 54 (loop -> forloop .)
    [               reduce using rule 54 (loop -> forloop .)
    -               reduce using rule 54 (loop -> forloop .)
    IF              reduce using rule 54 (loop -> forloop .)
    RETURN          reduce using rule 54 (loop -> forloop .)
    PRINT           reduce using rule 54 (loop -> forloop .)
    {               reduce using rule 54 (loop -> forloop .)
    ID              reduce using rule 54 (loop -> forloop .)
    EYE             reduce using rule 54 (loop -> forloop .)
    ZEROS           reduce using rule 54 (loop -> forloop .)
    ONES            reduce using rule 54 (loop -> forloop .)
    FOR             reduce using rule 54 (loop -> forloop .)
    WHILE           reduce using rule 54 (loop -> forloop .)
    $end            reduce using rule 54 (loop -> forloop .)
    }               reduce using rule 54 (loop -> forloop .)
    ELSE            reduce using rule 54 (loop -> forloop .)


state 22

    (55) loop -> whileloop .

    BREAK           reduce using rule 55 (loop -> whileloop .)
    CONTINUE        reduce using rule 55 (loop -> whileloop .)
    INTNUM          reduce using rule 55 (loop -> whileloop .)
    FLOATNUM        reduce using rule 55 (loop -> whileloop .)
    [               reduce using rule 55 (loop -> whileloop .)
    -               reduce using rule 55 (loop -> whileloop .)
    IF              reduce using rule 55 (loop -> whileloop .)
    RETURN          reduce using rule 55 (loop -> whileloop .)
    PRINT           reduce using rule 55 (loop -> whileloop .)
    {               reduce using rule 55 (loop -> whileloop .)
    ID              reduce using rule 55 (loop -> whileloop .)
    EYE             reduce using rule 55 (loop -> whileloop .)
    ZEROS           reduce using rule 55 (loop -> whileloop .)
    ONES            reduce using rule 55 (loop -> whileloop .)
    FOR             reduce using rule 55 (loop -> whileloop .)
    WHILE           reduce using rule 55 (loop -> whileloop .)
    $end            reduce using rule 55 (loop -> whileloop .)
    }               reduce using rule 55 (loop -> whileloop .)
    ELSE            reduce using rule 55 (loop -> whileloop .)


state 23

    (59) returnexpr -> RETURN . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 65
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 24

    (60) printexpr -> PRINT . printable
    (61) printable -> . STRING
    (62) printable -> . expression
    (63) printable -> . printable , expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    STRING          shift and go to state 67
    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    printable                      shift and go to state 66
    expression                     shift and go to state 68
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 25

    (15) complexinstruction -> { . instructions }
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . expression
    (7) instruction -> . assignment ;
    (8) instruction -> . ifexpr
    (9) instruction -> . loop
    (10) instruction -> . returnexpr ;
    (11) instruction -> . printexpr ;
    (12) instruction -> . BREAK ;
    (13) instruction -> . CONTINUE ;
    (14) instruction -> . complexinstruction
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (16) assignment -> . assignable = expression
    (17) assignment -> . assignable ADDASSIGN expression
    (18) assignment -> . assignable SUBASSIGN expression
    (19) assignment -> . assignable MULASSIGN expression
    (20) assignment -> . assignable DIVASSIGN expression
    (52) ifexpr -> . IF ( expression ) instruction
    (53) ifexpr -> . IF ( expression ) instruction ELSE instruction
    (54) loop -> . forloop
    (55) loop -> . whileloop
    (59) returnexpr -> . RETURN expression
    (60) printexpr -> . PRINT printable
    (15) complexinstruction -> . { instructions }
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (56) forloop -> . FOR ID = range instruction
    (57) whileloop -> . WHILE ( expression ) instruction
    (23) matrixelement -> . ID [ expression , expression ]

    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    IF              shift and go to state 20
    RETURN          shift and go to state 23
    PRINT           shift and go to state 24
    {               shift and go to state 25
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32

    instructions                   shift and go to state 69
    instruction                    shift and go to state 4
    expression                     shift and go to state 5
    assignment                     shift and go to state 6
    ifexpr                         shift and go to state 7
    loop                           shift and go to state 8
    returnexpr                     shift and go to state 9
    printexpr                      shift and go to state 10
    complexinstruction             shift and go to state 13
    assignable                     shift and go to state 17
    special                        shift and go to state 18
    forloop                        shift and go to state 21
    whileloop                      shift and go to state 22
    matrixelement                  shift and go to state 27

state 26

    (21) assignable -> ID .
    (23) matrixelement -> ID . [ expression , expression ]

  ! shift/reduce conflict for [ resolved as shift
    =               reduce using rule 21 (assignable -> ID .)
    ADDASSIGN       reduce using rule 21 (assignable -> ID .)
    SUBASSIGN       reduce using rule 21 (assignable -> ID .)
    MULASSIGN       reduce using rule 21 (assignable -> ID .)
    DIVASSIGN       reduce using rule 21 (assignable -> ID .)
    +               reduce using rule 21 (assignable -> ID .)
    -               reduce using rule 21 (assignable -> ID .)
    *               reduce using rule 21 (assignable -> ID .)
    /               reduce using rule 21 (assignable -> ID .)
    DOTADD          reduce using rule 21 (assignable -> ID .)
    DOTSUB          reduce using rule 21 (assignable -> ID .)
    DOTMUL          reduce using rule 21 (assignable -> ID .)
    DOTDIV          reduce using rule 21 (assignable -> ID .)
    LE              reduce using rule 21 (assignable -> ID .)
    GE              reduce using rule 21 (assignable -> ID .)
    EQ              reduce using rule 21 (assignable -> ID .)
    >               reduce using rule 21 (assignable -> ID .)
    <               reduce using rule 21 (assignable -> ID .)
    DIFF            reduce using rule 21 (assignable -> ID .)
    '               reduce using rule 21 (assignable -> ID .)
    BREAK           reduce using rule 21 (assignable -> ID .)
    CONTINUE        reduce using rule 21 (assignable -> ID .)
    INTNUM          reduce using rule 21 (assignable -> ID .)
    FLOATNUM        reduce using rule 21 (assignable -> ID .)
    IF              reduce using rule 21 (assignable -> ID .)
    RETURN          reduce using rule 21 (assignable -> ID .)
    PRINT           reduce using rule 21 (assignable -> ID .)
    {               reduce using rule 21 (assignable -> ID .)
    ID              reduce using rule 21 (assignable -> ID .)
    EYE             reduce using rule 21 (assignable -> ID .)
    ZEROS           reduce using rule 21 (assignable -> ID .)
    ONES            reduce using rule 21 (assignable -> ID .)
    FOR             reduce using rule 21 (assignable -> ID .)
    WHILE           reduce using rule 21 (assignable -> ID .)
    $end            reduce using rule 21 (assignable -> ID .)
    ;               reduce using rule 21 (assignable -> ID .)
    ,               reduce using rule 21 (assignable -> ID .)
    }               reduce using rule 21 (assignable -> ID .)
    )               reduce using rule 21 (assignable -> ID .)
    ]               reduce using rule 21 (assignable -> ID .)
    :               reduce using rule 21 (assignable -> ID .)
    ELSE            reduce using rule 21 (assignable -> ID .)
    [               shift and go to state 70

  ! [               [ reduce using rule 21 (assignable -> ID .) ]


state 27

    (22) assignable -> matrixelement .

    =               reduce using rule 22 (assignable -> matrixelement .)
    ADDASSIGN       reduce using rule 22 (assignable -> matrixelement .)
    SUBASSIGN       reduce using rule 22 (assignable -> matrixelement .)
    MULASSIGN       reduce using rule 22 (assignable -> matrixelement .)
    DIVASSIGN       reduce using rule 22 (assignable -> matrixelement .)
    +               reduce using rule 22 (assignable -> matrixelement .)
    -               reduce using rule 22 (assignable -> matrixelement .)
    *               reduce using rule 22 (assignable -> matrixelement .)
    /               reduce using rule 22 (assignable -> matrixelement .)
    DOTADD          reduce using rule 22 (assignable -> matrixelement .)
    DOTSUB          reduce using rule 22 (assignable -> matrixelement .)
    DOTMUL          reduce using rule 22 (assignable -> matrixelement .)
    DOTDIV          reduce using rule 22 (assignable -> matrixelement .)
    LE              reduce using rule 22 (assignable -> matrixelement .)
    GE              reduce using rule 22 (assignable -> matrixelement .)
    EQ              reduce using rule 22 (assignable -> matrixelement .)
    >               reduce using rule 22 (assignable -> matrixelement .)
    <               reduce using rule 22 (assignable -> matrixelement .)
    DIFF            reduce using rule 22 (assignable -> matrixelement .)
    '               reduce using rule 22 (assignable -> matrixelement .)
    BREAK           reduce using rule 22 (assignable -> matrixelement .)
    CONTINUE        reduce using rule 22 (assignable -> matrixelement .)
    INTNUM          reduce using rule 22 (assignable -> matrixelement .)
    FLOATNUM        reduce using rule 22 (assignable -> matrixelement .)
    [               reduce using rule 22 (assignable -> matrixelement .)
    IF              reduce using rule 22 (assignable -> matrixelement .)
    RETURN          reduce using rule 22 (assignable -> matrixelement .)
    PRINT           reduce using rule 22 (assignable -> matrixelement .)
    {               reduce using rule 22 (assignable -> matrixelement .)
    ID              reduce using rule 22 (assignable -> matrixelement .)
    EYE             reduce using rule 22 (assignable -> matrixelement .)
    ZEROS           reduce using rule 22 (assignable -> matrixelement .)
    ONES            reduce using rule 22 (assignable -> matrixelement .)
    FOR             reduce using rule 22 (assignable -> matrixelement .)
    WHILE           reduce using rule 22 (assignable -> matrixelement .)
    $end            reduce using rule 22 (assignable -> matrixelement .)
    ;               reduce using rule 22 (assignable -> matrixelement .)
    ,               reduce using rule 22 (assignable -> matrixelement .)
    }               reduce using rule 22 (assignable -> matrixelement .)
    )               reduce using rule 22 (assignable -> matrixelement .)
    ]               reduce using rule 22 (assignable -> matrixelement .)
    :               reduce using rule 22 (assignable -> matrixelement .)
    ELSE            reduce using rule 22 (assignable -> matrixelement .)


state 28

    (45) special -> EYE .

    (               reduce using rule 45 (special -> EYE .)


state 29

    (46) special -> ZEROS .

    (               reduce using rule 46 (special -> ZEROS .)


state 30

    (47) special -> ONES .

    (               reduce using rule 47 (special -> ONES .)


state 31

    (56) forloop -> FOR . ID = range instruction

    ID              shift and go to state 71


state 32

    (57) whileloop -> WHILE . ( expression ) instruction

    (               shift and go to state 72


state 33

    (4) instructions -> instructions instruction .

    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    INTNUM          reduce using rule 4 (instructions -> instructions instruction .)
    FLOATNUM        reduce using rule 4 (instructions -> instructions instruction .)
    [               reduce using rule 4 (instructions -> instructions instruction .)
    -               reduce using rule 4 (instructions -> instructions instruction .)
    IF              reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    {               reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    EYE             reduce using rule 4 (instructions -> instructions instruction .)
    ZEROS           reduce using rule 4 (instructions -> instructions instruction .)
    ONES            reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    }               reduce using rule 4 (instructions -> instructions instruction .)


state 34

    (24) expression -> expression + . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 73
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 35

    (25) expression -> expression - . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 74
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 36

    (26) expression -> expression * . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 75
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 37

    (27) expression -> expression / . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 76
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 38

    (28) expression -> expression DOTADD . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 77
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 39

    (29) expression -> expression DOTSUB . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 78
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 40

    (30) expression -> expression DOTMUL . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 79
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 41

    (31) expression -> expression DOTDIV . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 80
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 42

    (32) expression -> expression LE . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 81
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 43

    (33) expression -> expression GE . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 82
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 44

    (34) expression -> expression EQ . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 83
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 45

    (35) expression -> expression > . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 84
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 46

    (36) expression -> expression < . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 85
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 47

    (37) expression -> expression DIFF . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 86
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 48

    (38) expression -> expression ' .

    +               reduce using rule 38 (expression -> expression ' .)
    -               reduce using rule 38 (expression -> expression ' .)
    *               reduce using rule 38 (expression -> expression ' .)
    /               reduce using rule 38 (expression -> expression ' .)
    DOTADD          reduce using rule 38 (expression -> expression ' .)
    DOTSUB          reduce using rule 38 (expression -> expression ' .)
    DOTMUL          reduce using rule 38 (expression -> expression ' .)
    DOTDIV          reduce using rule 38 (expression -> expression ' .)
    LE              reduce using rule 38 (expression -> expression ' .)
    GE              reduce using rule 38 (expression -> expression ' .)
    EQ              reduce using rule 38 (expression -> expression ' .)
    >               reduce using rule 38 (expression -> expression ' .)
    <               reduce using rule 38 (expression -> expression ' .)
    DIFF            reduce using rule 38 (expression -> expression ' .)
    '               reduce using rule 38 (expression -> expression ' .)
    BREAK           reduce using rule 38 (expression -> expression ' .)
    CONTINUE        reduce using rule 38 (expression -> expression ' .)
    INTNUM          reduce using rule 38 (expression -> expression ' .)
    FLOATNUM        reduce using rule 38 (expression -> expression ' .)
    [               reduce using rule 38 (expression -> expression ' .)
    IF              reduce using rule 38 (expression -> expression ' .)
    RETURN          reduce using rule 38 (expression -> expression ' .)
    PRINT           reduce using rule 38 (expression -> expression ' .)
    {               reduce using rule 38 (expression -> expression ' .)
    ID              reduce using rule 38 (expression -> expression ' .)
    EYE             reduce using rule 38 (expression -> expression ' .)
    ZEROS           reduce using rule 38 (expression -> expression ' .)
    ONES            reduce using rule 38 (expression -> expression ' .)
    FOR             reduce using rule 38 (expression -> expression ' .)
    WHILE           reduce using rule 38 (expression -> expression ' .)
    $end            reduce using rule 38 (expression -> expression ' .)
    ;               reduce using rule 38 (expression -> expression ' .)
    ,               reduce using rule 38 (expression -> expression ' .)
    }               reduce using rule 38 (expression -> expression ' .)
    )               reduce using rule 38 (expression -> expression ' .)
    ]               reduce using rule 38 (expression -> expression ' .)
    :               reduce using rule 38 (expression -> expression ' .)
    ELSE            reduce using rule 38 (expression -> expression ' .)


state 49

    (7) instruction -> assignment ; .

    BREAK           reduce using rule 7 (instruction -> assignment ; .)
    CONTINUE        reduce using rule 7 (instruction -> assignment ; .)
    INTNUM          reduce using rule 7 (instruction -> assignment ; .)
    FLOATNUM        reduce using rule 7 (instruction -> assignment ; .)
    [               reduce using rule 7 (instruction -> assignment ; .)
    -               reduce using rule 7 (instruction -> assignment ; .)
    IF              reduce using rule 7 (instruction -> assignment ; .)
    RETURN          reduce using rule 7 (instruction -> assignment ; .)
    PRINT           reduce using rule 7 (instruction -> assignment ; .)
    {               reduce using rule 7 (instruction -> assignment ; .)
    ID              reduce using rule 7 (instruction -> assignment ; .)
    EYE             reduce using rule 7 (instruction -> assignment ; .)
    ZEROS           reduce using rule 7 (instruction -> assignment ; .)
    ONES            reduce using rule 7 (instruction -> assignment ; .)
    FOR             reduce using rule 7 (instruction -> assignment ; .)
    WHILE           reduce using rule 7 (instruction -> assignment ; .)
    $end            reduce using rule 7 (instruction -> assignment ; .)
    }               reduce using rule 7 (instruction -> assignment ; .)
    ELSE            reduce using rule 7 (instruction -> assignment ; .)


state 50

    (10) instruction -> returnexpr ; .

    BREAK           reduce using rule 10 (instruction -> returnexpr ; .)
    CONTINUE        reduce using rule 10 (instruction -> returnexpr ; .)
    INTNUM          reduce using rule 10 (instruction -> returnexpr ; .)
    FLOATNUM        reduce using rule 10 (instruction -> returnexpr ; .)
    [               reduce using rule 10 (instruction -> returnexpr ; .)
    -               reduce using rule 10 (instruction -> returnexpr ; .)
    IF              reduce using rule 10 (instruction -> returnexpr ; .)
    RETURN          reduce using rule 10 (instruction -> returnexpr ; .)
    PRINT           reduce using rule 10 (instruction -> returnexpr ; .)
    {               reduce using rule 10 (instruction -> returnexpr ; .)
    ID              reduce using rule 10 (instruction -> returnexpr ; .)
    EYE             reduce using rule 10 (instruction -> returnexpr ; .)
    ZEROS           reduce using rule 10 (instruction -> returnexpr ; .)
    ONES            reduce using rule 10 (instruction -> returnexpr ; .)
    FOR             reduce using rule 10 (instruction -> returnexpr ; .)
    WHILE           reduce using rule 10 (instruction -> returnexpr ; .)
    $end            reduce using rule 10 (instruction -> returnexpr ; .)
    }               reduce using rule 10 (instruction -> returnexpr ; .)
    ELSE            reduce using rule 10 (instruction -> returnexpr ; .)


state 51

    (11) instruction -> printexpr ; .

    BREAK           reduce using rule 11 (instruction -> printexpr ; .)
    CONTINUE        reduce using rule 11 (instruction -> printexpr ; .)
    INTNUM          reduce using rule 11 (instruction -> printexpr ; .)
    FLOATNUM        reduce using rule 11 (instruction -> printexpr ; .)
    [               reduce using rule 11 (instruction -> printexpr ; .)
    -               reduce using rule 11 (instruction -> printexpr ; .)
    IF              reduce using rule 11 (instruction -> printexpr ; .)
    RETURN          reduce using rule 11 (instruction -> printexpr ; .)
    PRINT           reduce using rule 11 (instruction -> printexpr ; .)
    {               reduce using rule 11 (instruction -> printexpr ; .)
    ID              reduce using rule 11 (instruction -> printexpr ; .)
    EYE             reduce using rule 11 (instruction -> printexpr ; .)
    ZEROS           reduce using rule 11 (instruction -> printexpr ; .)
    ONES            reduce using rule 11 (instruction -> printexpr ; .)
    FOR             reduce using rule 11 (instruction -> printexpr ; .)
    WHILE           reduce using rule 11 (instruction -> printexpr ; .)
    $end            reduce using rule 11 (instruction -> printexpr ; .)
    }               reduce using rule 11 (instruction -> printexpr ; .)
    ELSE            reduce using rule 11 (instruction -> printexpr ; .)


state 52

    (12) instruction -> BREAK ; .

    BREAK           reduce using rule 12 (instruction -> BREAK ; .)
    CONTINUE        reduce using rule 12 (instruction -> BREAK ; .)
    INTNUM          reduce using rule 12 (instruction -> BREAK ; .)
    FLOATNUM        reduce using rule 12 (instruction -> BREAK ; .)
    [               reduce using rule 12 (instruction -> BREAK ; .)
    -               reduce using rule 12 (instruction -> BREAK ; .)
    IF              reduce using rule 12 (instruction -> BREAK ; .)
    RETURN          reduce using rule 12 (instruction -> BREAK ; .)
    PRINT           reduce using rule 12 (instruction -> BREAK ; .)
    {               reduce using rule 12 (instruction -> BREAK ; .)
    ID              reduce using rule 12 (instruction -> BREAK ; .)
    EYE             reduce using rule 12 (instruction -> BREAK ; .)
    ZEROS           reduce using rule 12 (instruction -> BREAK ; .)
    ONES            reduce using rule 12 (instruction -> BREAK ; .)
    FOR             reduce using rule 12 (instruction -> BREAK ; .)
    WHILE           reduce using rule 12 (instruction -> BREAK ; .)
    $end            reduce using rule 12 (instruction -> BREAK ; .)
    }               reduce using rule 12 (instruction -> BREAK ; .)
    ELSE            reduce using rule 12 (instruction -> BREAK ; .)


state 53

    (13) instruction -> CONTINUE ; .

    BREAK           reduce using rule 13 (instruction -> CONTINUE ; .)
    CONTINUE        reduce using rule 13 (instruction -> CONTINUE ; .)
    INTNUM          reduce using rule 13 (instruction -> CONTINUE ; .)
    FLOATNUM        reduce using rule 13 (instruction -> CONTINUE ; .)
    [               reduce using rule 13 (instruction -> CONTINUE ; .)
    -               reduce using rule 13 (instruction -> CONTINUE ; .)
    IF              reduce using rule 13 (instruction -> CONTINUE ; .)
    RETURN          reduce using rule 13 (instruction -> CONTINUE ; .)
    PRINT           reduce using rule 13 (instruction -> CONTINUE ; .)
    {               reduce using rule 13 (instruction -> CONTINUE ; .)
    ID              reduce using rule 13 (instruction -> CONTINUE ; .)
    EYE             reduce using rule 13 (instruction -> CONTINUE ; .)
    ZEROS           reduce using rule 13 (instruction -> CONTINUE ; .)
    ONES            reduce using rule 13 (instruction -> CONTINUE ; .)
    FOR             reduce using rule 13 (instruction -> CONTINUE ; .)
    WHILE           reduce using rule 13 (instruction -> CONTINUE ; .)
    $end            reduce using rule 13 (instruction -> CONTINUE ; .)
    }               reduce using rule 13 (instruction -> CONTINUE ; .)
    ELSE            reduce using rule 13 (instruction -> CONTINUE ; .)


state 54

    (44) expression -> - expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    +               reduce using rule 44 (expression -> - expression .)
    -               reduce using rule 44 (expression -> - expression .)
    *               reduce using rule 44 (expression -> - expression .)
    /               reduce using rule 44 (expression -> - expression .)
    DOTADD          reduce using rule 44 (expression -> - expression .)
    DOTSUB          reduce using rule 44 (expression -> - expression .)
    DOTMUL          reduce using rule 44 (expression -> - expression .)
    DOTDIV          reduce using rule 44 (expression -> - expression .)
    LE              reduce using rule 44 (expression -> - expression .)
    GE              reduce using rule 44 (expression -> - expression .)
    EQ              reduce using rule 44 (expression -> - expression .)
    >               reduce using rule 44 (expression -> - expression .)
    <               reduce using rule 44 (expression -> - expression .)
    DIFF            reduce using rule 44 (expression -> - expression .)
    '               reduce using rule 44 (expression -> - expression .)
    BREAK           reduce using rule 44 (expression -> - expression .)
    CONTINUE        reduce using rule 44 (expression -> - expression .)
    INTNUM          reduce using rule 44 (expression -> - expression .)
    FLOATNUM        reduce using rule 44 (expression -> - expression .)
    [               reduce using rule 44 (expression -> - expression .)
    IF              reduce using rule 44 (expression -> - expression .)
    RETURN          reduce using rule 44 (expression -> - expression .)
    PRINT           reduce using rule 44 (expression -> - expression .)
    {               reduce using rule 44 (expression -> - expression .)
    ID              reduce using rule 44 (expression -> - expression .)
    EYE             reduce using rule 44 (expression -> - expression .)
    ZEROS           reduce using rule 44 (expression -> - expression .)
    ONES            reduce using rule 44 (expression -> - expression .)
    FOR             reduce using rule 44 (expression -> - expression .)
    WHILE           reduce using rule 44 (expression -> - expression .)
    $end            reduce using rule 44 (expression -> - expression .)
    ;               reduce using rule 44 (expression -> - expression .)
    ,               reduce using rule 44 (expression -> - expression .)
    }               reduce using rule 44 (expression -> - expression .)
    )               reduce using rule 44 (expression -> - expression .)
    ]               reduce using rule 44 (expression -> - expression .)
    :               reduce using rule 44 (expression -> - expression .)
    ELSE            reduce using rule 44 (expression -> - expression .)

  ! +               [ shift and go to state 34 ]
  ! -               [ shift and go to state 35 ]
  ! *               [ shift and go to state 36 ]
  ! /               [ shift and go to state 37 ]
  ! DOTADD          [ shift and go to state 38 ]
  ! DOTSUB          [ shift and go to state 39 ]
  ! DOTMUL          [ shift and go to state 40 ]
  ! DOTDIV          [ shift and go to state 41 ]
  ! LE              [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! >               [ shift and go to state 45 ]
  ! <               [ shift and go to state 46 ]
  ! DIFF            [ shift and go to state 47 ]
  ! '               [ shift and go to state 48 ]


state 55

    (41) expression -> assignable .

    +               reduce using rule 41 (expression -> assignable .)
    -               reduce using rule 41 (expression -> assignable .)
    *               reduce using rule 41 (expression -> assignable .)
    /               reduce using rule 41 (expression -> assignable .)
    DOTADD          reduce using rule 41 (expression -> assignable .)
    DOTSUB          reduce using rule 41 (expression -> assignable .)
    DOTMUL          reduce using rule 41 (expression -> assignable .)
    DOTDIV          reduce using rule 41 (expression -> assignable .)
    LE              reduce using rule 41 (expression -> assignable .)
    GE              reduce using rule 41 (expression -> assignable .)
    EQ              reduce using rule 41 (expression -> assignable .)
    >               reduce using rule 41 (expression -> assignable .)
    <               reduce using rule 41 (expression -> assignable .)
    DIFF            reduce using rule 41 (expression -> assignable .)
    '               reduce using rule 41 (expression -> assignable .)
    BREAK           reduce using rule 41 (expression -> assignable .)
    CONTINUE        reduce using rule 41 (expression -> assignable .)
    INTNUM          reduce using rule 41 (expression -> assignable .)
    FLOATNUM        reduce using rule 41 (expression -> assignable .)
    [               reduce using rule 41 (expression -> assignable .)
    IF              reduce using rule 41 (expression -> assignable .)
    RETURN          reduce using rule 41 (expression -> assignable .)
    PRINT           reduce using rule 41 (expression -> assignable .)
    {               reduce using rule 41 (expression -> assignable .)
    ID              reduce using rule 41 (expression -> assignable .)
    EYE             reduce using rule 41 (expression -> assignable .)
    ZEROS           reduce using rule 41 (expression -> assignable .)
    ONES            reduce using rule 41 (expression -> assignable .)
    FOR             reduce using rule 41 (expression -> assignable .)
    WHILE           reduce using rule 41 (expression -> assignable .)
    $end            reduce using rule 41 (expression -> assignable .)
    ;               reduce using rule 41 (expression -> assignable .)
    ,               reduce using rule 41 (expression -> assignable .)
    }               reduce using rule 41 (expression -> assignable .)
    )               reduce using rule 41 (expression -> assignable .)
    ]               reduce using rule 41 (expression -> assignable .)
    :               reduce using rule 41 (expression -> assignable .)
    ELSE            reduce using rule 41 (expression -> assignable .)


state 56

    (16) assignment -> assignable = . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    assignable                     shift and go to state 55
    expression                     shift and go to state 87
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 57

    (17) assignment -> assignable ADDASSIGN . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    assignable                     shift and go to state 55
    expression                     shift and go to state 88
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 58

    (18) assignment -> assignable SUBASSIGN . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    assignable                     shift and go to state 55
    expression                     shift and go to state 89
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 59

    (19) assignment -> assignable MULASSIGN . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    assignable                     shift and go to state 55
    expression                     shift and go to state 90
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 60

    (20) assignment -> assignable DIVASSIGN . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    assignable                     shift and go to state 55
    expression                     shift and go to state 91
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 61

    (42) expression -> special ( . expression )
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    special                        shift and go to state 18
    expression                     shift and go to state 92
    assignable                     shift and go to state 55
    matrixelement                  shift and go to state 27

state 62

    (49) minit -> [ . matrixcontents ]
    (50) matrixcontents -> . expression
    (51) matrixcontents -> . matrixcontents , expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    matrixcontents                 shift and go to state 93
    expression                     shift and go to state 94
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 63

    (43) expression -> [ minit . ]
    (48) minit -> minit . , [ matrixcontents ]

    ]               shift and go to state 95
    ,               shift and go to state 96


state 64

    (52) ifexpr -> IF ( . expression ) instruction
    (53) ifexpr -> IF ( . expression ) instruction ELSE instruction
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 97
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 65

    (59) returnexpr -> RETURN expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    ;               reduce using rule 59 (returnexpr -> RETURN expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48


state 66

    (60) printexpr -> PRINT printable .
    (63) printable -> printable . , expression

    ;               reduce using rule 60 (printexpr -> PRINT printable .)
    ,               shift and go to state 98


state 67

    (61) printable -> STRING .

    ,               reduce using rule 61 (printable -> STRING .)
    ;               reduce using rule 61 (printable -> STRING .)


state 68

    (62) printable -> expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    ,               reduce using rule 62 (printable -> expression .)
    ;               reduce using rule 62 (printable -> expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48


state 69

    (15) complexinstruction -> { instructions . }
    (4) instructions -> instructions . instruction
    (6) instruction -> . expression
    (7) instruction -> . assignment ;
    (8) instruction -> . ifexpr
    (9) instruction -> . loop
    (10) instruction -> . returnexpr ;
    (11) instruction -> . printexpr ;
    (12) instruction -> . BREAK ;
    (13) instruction -> . CONTINUE ;
    (14) instruction -> . complexinstruction
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (16) assignment -> . assignable = expression
    (17) assignment -> . assignable ADDASSIGN expression
    (18) assignment -> . assignable SUBASSIGN expression
    (19) assignment -> . assignable MULASSIGN expression
    (20) assignment -> . assignable DIVASSIGN expression
    (52) ifexpr -> . IF ( expression ) instruction
    (53) ifexpr -> . IF ( expression ) instruction ELSE instruction
    (54) loop -> . forloop
    (55) loop -> . whileloop
    (59) returnexpr -> . RETURN expression
    (60) printexpr -> . PRINT printable
    (15) complexinstruction -> . { instructions }
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (56) forloop -> . FOR ID = range instruction
    (57) whileloop -> . WHILE ( expression ) instruction
    (23) matrixelement -> . ID [ expression , expression ]

    }               shift and go to state 99
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    IF              shift and go to state 20
    RETURN          shift and go to state 23
    PRINT           shift and go to state 24
    {               shift and go to state 25
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32

    instruction                    shift and go to state 33
    expression                     shift and go to state 5
    assignment                     shift and go to state 6
    ifexpr                         shift and go to state 7
    loop                           shift and go to state 8
    returnexpr                     shift and go to state 9
    printexpr                      shift and go to state 10
    complexinstruction             shift and go to state 13
    assignable                     shift and go to state 17
    special                        shift and go to state 18
    forloop                        shift and go to state 21
    whileloop                      shift and go to state 22
    matrixelement                  shift and go to state 27

state 70

    (23) matrixelement -> ID [ . expression , expression ]
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 100
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 71

    (56) forloop -> FOR ID . = range instruction

    =               shift and go to state 101


state 72

    (57) whileloop -> WHILE ( . expression ) instruction
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 102
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 73

    (24) expression -> expression + expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    +               reduce using rule 24 (expression -> expression + expression .)
    -               reduce using rule 24 (expression -> expression + expression .)
    DOTADD          reduce using rule 24 (expression -> expression + expression .)
    DOTSUB          reduce using rule 24 (expression -> expression + expression .)
    DOTMUL          reduce using rule 24 (expression -> expression + expression .)
    DOTDIV          reduce using rule 24 (expression -> expression + expression .)
    LE              reduce using rule 24 (expression -> expression + expression .)
    GE              reduce using rule 24 (expression -> expression + expression .)
    EQ              reduce using rule 24 (expression -> expression + expression .)
    >               reduce using rule 24 (expression -> expression + expression .)
    <               reduce using rule 24 (expression -> expression + expression .)
    DIFF            reduce using rule 24 (expression -> expression + expression .)
    BREAK           reduce using rule 24 (expression -> expression + expression .)
    CONTINUE        reduce using rule 24 (expression -> expression + expression .)
    INTNUM          reduce using rule 24 (expression -> expression + expression .)
    FLOATNUM        reduce using rule 24 (expression -> expression + expression .)
    [               reduce using rule 24 (expression -> expression + expression .)
    IF              reduce using rule 24 (expression -> expression + expression .)
    RETURN          reduce using rule 24 (expression -> expression + expression .)
    PRINT           reduce using rule 24 (expression -> expression + expression .)
    {               reduce using rule 24 (expression -> expression + expression .)
    ID              reduce using rule 24 (expression -> expression + expression .)
    EYE             reduce using rule 24 (expression -> expression + expression .)
    ZEROS           reduce using rule 24 (expression -> expression + expression .)
    ONES            reduce using rule 24 (expression -> expression + expression .)
    FOR             reduce using rule 24 (expression -> expression + expression .)
    WHILE           reduce using rule 24 (expression -> expression + expression .)
    $end            reduce using rule 24 (expression -> expression + expression .)
    ;               reduce using rule 24 (expression -> expression + expression .)
    ,               reduce using rule 24 (expression -> expression + expression .)
    }               reduce using rule 24 (expression -> expression + expression .)
    )               reduce using rule 24 (expression -> expression + expression .)
    ]               reduce using rule 24 (expression -> expression + expression .)
    :               reduce using rule 24 (expression -> expression + expression .)
    ELSE            reduce using rule 24 (expression -> expression + expression .)
    *               shift and go to state 36
    /               shift and go to state 37
    '               shift and go to state 48

  ! *               [ reduce using rule 24 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 24 (expression -> expression + expression .) ]
  ! '               [ reduce using rule 24 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 34 ]
  ! -               [ shift and go to state 35 ]
  ! DOTADD          [ shift and go to state 38 ]
  ! DOTSUB          [ shift and go to state 39 ]
  ! DOTMUL          [ shift and go to state 40 ]
  ! DOTDIV          [ shift and go to state 41 ]
  ! LE              [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! >               [ shift and go to state 45 ]
  ! <               [ shift and go to state 46 ]
  ! DIFF            [ shift and go to state 47 ]


state 74

    (25) expression -> expression - expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    +               reduce using rule 25 (expression -> expression - expression .)
    -               reduce using rule 25 (expression -> expression - expression .)
    DOTADD          reduce using rule 25 (expression -> expression - expression .)
    DOTSUB          reduce using rule 25 (expression -> expression - expression .)
    DOTMUL          reduce using rule 25 (expression -> expression - expression .)
    DOTDIV          reduce using rule 25 (expression -> expression - expression .)
    LE              reduce using rule 25 (expression -> expression - expression .)
    GE              reduce using rule 25 (expression -> expression - expression .)
    EQ              reduce using rule 25 (expression -> expression - expression .)
    >               reduce using rule 25 (expression -> expression - expression .)
    <               reduce using rule 25 (expression -> expression - expression .)
    DIFF            reduce using rule 25 (expression -> expression - expression .)
    BREAK           reduce using rule 25 (expression -> expression - expression .)
    CONTINUE        reduce using rule 25 (expression -> expression - expression .)
    INTNUM          reduce using rule 25 (expression -> expression - expression .)
    FLOATNUM        reduce using rule 25 (expression -> expression - expression .)
    [               reduce using rule 25 (expression -> expression - expression .)
    IF              reduce using rule 25 (expression -> expression - expression .)
    RETURN          reduce using rule 25 (expression -> expression - expression .)
    PRINT           reduce using rule 25 (expression -> expression - expression .)
    {               reduce using rule 25 (expression -> expression - expression .)
    ID              reduce using rule 25 (expression -> expression - expression .)
    EYE             reduce using rule 25 (expression -> expression - expression .)
    ZEROS           reduce using rule 25 (expression -> expression - expression .)
    ONES            reduce using rule 25 (expression -> expression - expression .)
    FOR             reduce using rule 25 (expression -> expression - expression .)
    WHILE           reduce using rule 25 (expression -> expression - expression .)
    $end            reduce using rule 25 (expression -> expression - expression .)
    ;               reduce using rule 25 (expression -> expression - expression .)
    ,               reduce using rule 25 (expression -> expression - expression .)
    }               reduce using rule 25 (expression -> expression - expression .)
    )               reduce using rule 25 (expression -> expression - expression .)
    ]               reduce using rule 25 (expression -> expression - expression .)
    :               reduce using rule 25 (expression -> expression - expression .)
    ELSE            reduce using rule 25 (expression -> expression - expression .)
    *               shift and go to state 36
    /               shift and go to state 37
    '               shift and go to state 48

  ! *               [ reduce using rule 25 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 25 (expression -> expression - expression .) ]
  ! '               [ reduce using rule 25 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 34 ]
  ! -               [ shift and go to state 35 ]
  ! DOTADD          [ shift and go to state 38 ]
  ! DOTSUB          [ shift and go to state 39 ]
  ! DOTMUL          [ shift and go to state 40 ]
  ! DOTDIV          [ shift and go to state 41 ]
  ! LE              [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! >               [ shift and go to state 45 ]
  ! <               [ shift and go to state 46 ]
  ! DIFF            [ shift and go to state 47 ]


state 75

    (26) expression -> expression * expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    +               reduce using rule 26 (expression -> expression * expression .)
    -               reduce using rule 26 (expression -> expression * expression .)
    *               reduce using rule 26 (expression -> expression * expression .)
    /               reduce using rule 26 (expression -> expression * expression .)
    DOTADD          reduce using rule 26 (expression -> expression * expression .)
    DOTSUB          reduce using rule 26 (expression -> expression * expression .)
    DOTMUL          reduce using rule 26 (expression -> expression * expression .)
    DOTDIV          reduce using rule 26 (expression -> expression * expression .)
    LE              reduce using rule 26 (expression -> expression * expression .)
    GE              reduce using rule 26 (expression -> expression * expression .)
    EQ              reduce using rule 26 (expression -> expression * expression .)
    >               reduce using rule 26 (expression -> expression * expression .)
    <               reduce using rule 26 (expression -> expression * expression .)
    DIFF            reduce using rule 26 (expression -> expression * expression .)
    BREAK           reduce using rule 26 (expression -> expression * expression .)
    CONTINUE        reduce using rule 26 (expression -> expression * expression .)
    INTNUM          reduce using rule 26 (expression -> expression * expression .)
    FLOATNUM        reduce using rule 26 (expression -> expression * expression .)
    [               reduce using rule 26 (expression -> expression * expression .)
    IF              reduce using rule 26 (expression -> expression * expression .)
    RETURN          reduce using rule 26 (expression -> expression * expression .)
    PRINT           reduce using rule 26 (expression -> expression * expression .)
    {               reduce using rule 26 (expression -> expression * expression .)
    ID              reduce using rule 26 (expression -> expression * expression .)
    EYE             reduce using rule 26 (expression -> expression * expression .)
    ZEROS           reduce using rule 26 (expression -> expression * expression .)
    ONES            reduce using rule 26 (expression -> expression * expression .)
    FOR             reduce using rule 26 (expression -> expression * expression .)
    WHILE           reduce using rule 26 (expression -> expression * expression .)
    $end            reduce using rule 26 (expression -> expression * expression .)
    ;               reduce using rule 26 (expression -> expression * expression .)
    ,               reduce using rule 26 (expression -> expression * expression .)
    }               reduce using rule 26 (expression -> expression * expression .)
    )               reduce using rule 26 (expression -> expression * expression .)
    ]               reduce using rule 26 (expression -> expression * expression .)
    :               reduce using rule 26 (expression -> expression * expression .)
    ELSE            reduce using rule 26 (expression -> expression * expression .)
    '               shift and go to state 48

  ! '               [ reduce using rule 26 (expression -> expression * expression .) ]
  ! +               [ shift and go to state 34 ]
  ! -               [ shift and go to state 35 ]
  ! *               [ shift and go to state 36 ]
  ! /               [ shift and go to state 37 ]
  ! DOTADD          [ shift and go to state 38 ]
  ! DOTSUB          [ shift and go to state 39 ]
  ! DOTMUL          [ shift and go to state 40 ]
  ! DOTDIV          [ shift and go to state 41 ]
  ! LE              [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! >               [ shift and go to state 45 ]
  ! <               [ shift and go to state 46 ]
  ! DIFF            [ shift and go to state 47 ]


state 76

    (27) expression -> expression / expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    +               reduce using rule 27 (expression -> expression / expression .)
    -               reduce using rule 27 (expression -> expression / expression .)
    *               reduce using rule 27 (expression -> expression / expression .)
    /               reduce using rule 27 (expression -> expression / expression .)
    DOTADD          reduce using rule 27 (expression -> expression / expression .)
    DOTSUB          reduce using rule 27 (expression -> expression / expression .)
    DOTMUL          reduce using rule 27 (expression -> expression / expression .)
    DOTDIV          reduce using rule 27 (expression -> expression / expression .)
    LE              reduce using rule 27 (expression -> expression / expression .)
    GE              reduce using rule 27 (expression -> expression / expression .)
    EQ              reduce using rule 27 (expression -> expression / expression .)
    >               reduce using rule 27 (expression -> expression / expression .)
    <               reduce using rule 27 (expression -> expression / expression .)
    DIFF            reduce using rule 27 (expression -> expression / expression .)
    BREAK           reduce using rule 27 (expression -> expression / expression .)
    CONTINUE        reduce using rule 27 (expression -> expression / expression .)
    INTNUM          reduce using rule 27 (expression -> expression / expression .)
    FLOATNUM        reduce using rule 27 (expression -> expression / expression .)
    [               reduce using rule 27 (expression -> expression / expression .)
    IF              reduce using rule 27 (expression -> expression / expression .)
    RETURN          reduce using rule 27 (expression -> expression / expression .)
    PRINT           reduce using rule 27 (expression -> expression / expression .)
    {               reduce using rule 27 (expression -> expression / expression .)
    ID              reduce using rule 27 (expression -> expression / expression .)
    EYE             reduce using rule 27 (expression -> expression / expression .)
    ZEROS           reduce using rule 27 (expression -> expression / expression .)
    ONES            reduce using rule 27 (expression -> expression / expression .)
    FOR             reduce using rule 27 (expression -> expression / expression .)
    WHILE           reduce using rule 27 (expression -> expression / expression .)
    $end            reduce using rule 27 (expression -> expression / expression .)
    ;               reduce using rule 27 (expression -> expression / expression .)
    ,               reduce using rule 27 (expression -> expression / expression .)
    }               reduce using rule 27 (expression -> expression / expression .)
    )               reduce using rule 27 (expression -> expression / expression .)
    ]               reduce using rule 27 (expression -> expression / expression .)
    :               reduce using rule 27 (expression -> expression / expression .)
    ELSE            reduce using rule 27 (expression -> expression / expression .)
    '               shift and go to state 48

  ! '               [ reduce using rule 27 (expression -> expression / expression .) ]
  ! +               [ shift and go to state 34 ]
  ! -               [ shift and go to state 35 ]
  ! *               [ shift and go to state 36 ]
  ! /               [ shift and go to state 37 ]
  ! DOTADD          [ shift and go to state 38 ]
  ! DOTSUB          [ shift and go to state 39 ]
  ! DOTMUL          [ shift and go to state 40 ]
  ! DOTDIV          [ shift and go to state 41 ]
  ! LE              [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! >               [ shift and go to state 45 ]
  ! <               [ shift and go to state 46 ]
  ! DIFF            [ shift and go to state 47 ]


state 77

    (28) expression -> expression DOTADD expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for ' resolved as shift
    BREAK           reduce using rule 28 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 28 (expression -> expression DOTADD expression .)
    INTNUM          reduce using rule 28 (expression -> expression DOTADD expression .)
    FLOATNUM        reduce using rule 28 (expression -> expression DOTADD expression .)
    [               reduce using rule 28 (expression -> expression DOTADD expression .)
    IF              reduce using rule 28 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 28 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 28 (expression -> expression DOTADD expression .)
    {               reduce using rule 28 (expression -> expression DOTADD expression .)
    ID              reduce using rule 28 (expression -> expression DOTADD expression .)
    EYE             reduce using rule 28 (expression -> expression DOTADD expression .)
    ZEROS           reduce using rule 28 (expression -> expression DOTADD expression .)
    ONES            reduce using rule 28 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 28 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 28 (expression -> expression DOTADD expression .)
    $end            reduce using rule 28 (expression -> expression DOTADD expression .)
    ;               reduce using rule 28 (expression -> expression DOTADD expression .)
    ,               reduce using rule 28 (expression -> expression DOTADD expression .)
    }               reduce using rule 28 (expression -> expression DOTADD expression .)
    )               reduce using rule 28 (expression -> expression DOTADD expression .)
    ]               reduce using rule 28 (expression -> expression DOTADD expression .)
    :               reduce using rule 28 (expression -> expression DOTADD expression .)
    ELSE            reduce using rule 28 (expression -> expression DOTADD expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48

  ! +               [ reduce using rule 28 (expression -> expression DOTADD expression .) ]
  ! -               [ reduce using rule 28 (expression -> expression DOTADD expression .) ]
  ! *               [ reduce using rule 28 (expression -> expression DOTADD expression .) ]
  ! /               [ reduce using rule 28 (expression -> expression DOTADD expression .) ]
  ! DOTADD          [ reduce using rule 28 (expression -> expression DOTADD expression .) ]
  ! DOTSUB          [ reduce using rule 28 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 28 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 28 (expression -> expression DOTADD expression .) ]
  ! LE              [ reduce using rule 28 (expression -> expression DOTADD expression .) ]
  ! GE              [ reduce using rule 28 (expression -> expression DOTADD expression .) ]
  ! EQ              [ reduce using rule 28 (expression -> expression DOTADD expression .) ]
  ! >               [ reduce using rule 28 (expression -> expression DOTADD expression .) ]
  ! <               [ reduce using rule 28 (expression -> expression DOTADD expression .) ]
  ! DIFF            [ reduce using rule 28 (expression -> expression DOTADD expression .) ]
  ! '               [ reduce using rule 28 (expression -> expression DOTADD expression .) ]


state 78

    (29) expression -> expression DOTSUB expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for ' resolved as shift
    BREAK           reduce using rule 29 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 29 (expression -> expression DOTSUB expression .)
    INTNUM          reduce using rule 29 (expression -> expression DOTSUB expression .)
    FLOATNUM        reduce using rule 29 (expression -> expression DOTSUB expression .)
    [               reduce using rule 29 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 29 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 29 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 29 (expression -> expression DOTSUB expression .)
    {               reduce using rule 29 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 29 (expression -> expression DOTSUB expression .)
    EYE             reduce using rule 29 (expression -> expression DOTSUB expression .)
    ZEROS           reduce using rule 29 (expression -> expression DOTSUB expression .)
    ONES            reduce using rule 29 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 29 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 29 (expression -> expression DOTSUB expression .)
    $end            reduce using rule 29 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 29 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 29 (expression -> expression DOTSUB expression .)
    }               reduce using rule 29 (expression -> expression DOTSUB expression .)
    )               reduce using rule 29 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 29 (expression -> expression DOTSUB expression .)
    :               reduce using rule 29 (expression -> expression DOTSUB expression .)
    ELSE            reduce using rule 29 (expression -> expression DOTSUB expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48

  ! +               [ reduce using rule 29 (expression -> expression DOTSUB expression .) ]
  ! -               [ reduce using rule 29 (expression -> expression DOTSUB expression .) ]
  ! *               [ reduce using rule 29 (expression -> expression DOTSUB expression .) ]
  ! /               [ reduce using rule 29 (expression -> expression DOTSUB expression .) ]
  ! DOTADD          [ reduce using rule 29 (expression -> expression DOTSUB expression .) ]
  ! DOTSUB          [ reduce using rule 29 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 29 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 29 (expression -> expression DOTSUB expression .) ]
  ! LE              [ reduce using rule 29 (expression -> expression DOTSUB expression .) ]
  ! GE              [ reduce using rule 29 (expression -> expression DOTSUB expression .) ]
  ! EQ              [ reduce using rule 29 (expression -> expression DOTSUB expression .) ]
  ! >               [ reduce using rule 29 (expression -> expression DOTSUB expression .) ]
  ! <               [ reduce using rule 29 (expression -> expression DOTSUB expression .) ]
  ! DIFF            [ reduce using rule 29 (expression -> expression DOTSUB expression .) ]
  ! '               [ reduce using rule 29 (expression -> expression DOTSUB expression .) ]


state 79

    (30) expression -> expression DOTMUL expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for ' resolved as shift
    BREAK           reduce using rule 30 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 30 (expression -> expression DOTMUL expression .)
    INTNUM          reduce using rule 30 (expression -> expression DOTMUL expression .)
    FLOATNUM        reduce using rule 30 (expression -> expression DOTMUL expression .)
    [               reduce using rule 30 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 30 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 30 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 30 (expression -> expression DOTMUL expression .)
    {               reduce using rule 30 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 30 (expression -> expression DOTMUL expression .)
    EYE             reduce using rule 30 (expression -> expression DOTMUL expression .)
    ZEROS           reduce using rule 30 (expression -> expression DOTMUL expression .)
    ONES            reduce using rule 30 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 30 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 30 (expression -> expression DOTMUL expression .)
    $end            reduce using rule 30 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 30 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 30 (expression -> expression DOTMUL expression .)
    }               reduce using rule 30 (expression -> expression DOTMUL expression .)
    )               reduce using rule 30 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 30 (expression -> expression DOTMUL expression .)
    :               reduce using rule 30 (expression -> expression DOTMUL expression .)
    ELSE            reduce using rule 30 (expression -> expression DOTMUL expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48

  ! +               [ reduce using rule 30 (expression -> expression DOTMUL expression .) ]
  ! -               [ reduce using rule 30 (expression -> expression DOTMUL expression .) ]
  ! *               [ reduce using rule 30 (expression -> expression DOTMUL expression .) ]
  ! /               [ reduce using rule 30 (expression -> expression DOTMUL expression .) ]
  ! DOTADD          [ reduce using rule 30 (expression -> expression DOTMUL expression .) ]
  ! DOTSUB          [ reduce using rule 30 (expression -> expression DOTMUL expression .) ]
  ! DOTMUL          [ reduce using rule 30 (expression -> expression DOTMUL expression .) ]
  ! DOTDIV          [ reduce using rule 30 (expression -> expression DOTMUL expression .) ]
  ! LE              [ reduce using rule 30 (expression -> expression DOTMUL expression .) ]
  ! GE              [ reduce using rule 30 (expression -> expression DOTMUL expression .) ]
  ! EQ              [ reduce using rule 30 (expression -> expression DOTMUL expression .) ]
  ! >               [ reduce using rule 30 (expression -> expression DOTMUL expression .) ]
  ! <               [ reduce using rule 30 (expression -> expression DOTMUL expression .) ]
  ! DIFF            [ reduce using rule 30 (expression -> expression DOTMUL expression .) ]
  ! '               [ reduce using rule 30 (expression -> expression DOTMUL expression .) ]


state 80

    (31) expression -> expression DOTDIV expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for ' resolved as shift
    BREAK           reduce using rule 31 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 31 (expression -> expression DOTDIV expression .)
    INTNUM          reduce using rule 31 (expression -> expression DOTDIV expression .)
    FLOATNUM        reduce using rule 31 (expression -> expression DOTDIV expression .)
    [               reduce using rule 31 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 31 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 31 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 31 (expression -> expression DOTDIV expression .)
    {               reduce using rule 31 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 31 (expression -> expression DOTDIV expression .)
    EYE             reduce using rule 31 (expression -> expression DOTDIV expression .)
    ZEROS           reduce using rule 31 (expression -> expression DOTDIV expression .)
    ONES            reduce using rule 31 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 31 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 31 (expression -> expression DOTDIV expression .)
    $end            reduce using rule 31 (expression -> expression DOTDIV expression .)
    ;               reduce using rule 31 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 31 (expression -> expression DOTDIV expression .)
    }               reduce using rule 31 (expression -> expression DOTDIV expression .)
    )               reduce using rule 31 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 31 (expression -> expression DOTDIV expression .)
    :               reduce using rule 31 (expression -> expression DOTDIV expression .)
    ELSE            reduce using rule 31 (expression -> expression DOTDIV expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48

  ! +               [ reduce using rule 31 (expression -> expression DOTDIV expression .) ]
  ! -               [ reduce using rule 31 (expression -> expression DOTDIV expression .) ]
  ! *               [ reduce using rule 31 (expression -> expression DOTDIV expression .) ]
  ! /               [ reduce using rule 31 (expression -> expression DOTDIV expression .) ]
  ! DOTADD          [ reduce using rule 31 (expression -> expression DOTDIV expression .) ]
  ! DOTSUB          [ reduce using rule 31 (expression -> expression DOTDIV expression .) ]
  ! DOTMUL          [ reduce using rule 31 (expression -> expression DOTDIV expression .) ]
  ! DOTDIV          [ reduce using rule 31 (expression -> expression DOTDIV expression .) ]
  ! LE              [ reduce using rule 31 (expression -> expression DOTDIV expression .) ]
  ! GE              [ reduce using rule 31 (expression -> expression DOTDIV expression .) ]
  ! EQ              [ reduce using rule 31 (expression -> expression DOTDIV expression .) ]
  ! >               [ reduce using rule 31 (expression -> expression DOTDIV expression .) ]
  ! <               [ reduce using rule 31 (expression -> expression DOTDIV expression .) ]
  ! DIFF            [ reduce using rule 31 (expression -> expression DOTDIV expression .) ]
  ! '               [ reduce using rule 31 (expression -> expression DOTDIV expression .) ]


state 81

    (32) expression -> expression LE expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for ' resolved as shift
    BREAK           reduce using rule 32 (expression -> expression LE expression .)
    CONTINUE        reduce using rule 32 (expression -> expression LE expression .)
    INTNUM          reduce using rule 32 (expression -> expression LE expression .)
    FLOATNUM        reduce using rule 32 (expression -> expression LE expression .)
    [               reduce using rule 32 (expression -> expression LE expression .)
    IF              reduce using rule 32 (expression -> expression LE expression .)
    RETURN          reduce using rule 32 (expression -> expression LE expression .)
    PRINT           reduce using rule 32 (expression -> expression LE expression .)
    {               reduce using rule 32 (expression -> expression LE expression .)
    ID              reduce using rule 32 (expression -> expression LE expression .)
    EYE             reduce using rule 32 (expression -> expression LE expression .)
    ZEROS           reduce using rule 32 (expression -> expression LE expression .)
    ONES            reduce using rule 32 (expression -> expression LE expression .)
    FOR             reduce using rule 32 (expression -> expression LE expression .)
    WHILE           reduce using rule 32 (expression -> expression LE expression .)
    $end            reduce using rule 32 (expression -> expression LE expression .)
    ;               reduce using rule 32 (expression -> expression LE expression .)
    ,               reduce using rule 32 (expression -> expression LE expression .)
    }               reduce using rule 32 (expression -> expression LE expression .)
    )               reduce using rule 32 (expression -> expression LE expression .)
    ]               reduce using rule 32 (expression -> expression LE expression .)
    :               reduce using rule 32 (expression -> expression LE expression .)
    ELSE            reduce using rule 32 (expression -> expression LE expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48

  ! +               [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! -               [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! *               [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! /               [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! DOTADD          [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! DOTSUB          [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! DOTMUL          [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! DOTDIV          [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! EQ              [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! >               [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! <               [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! DIFF            [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! '               [ reduce using rule 32 (expression -> expression LE expression .) ]


state 82

    (33) expression -> expression GE expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for ' resolved as shift
    BREAK           reduce using rule 33 (expression -> expression GE expression .)
    CONTINUE        reduce using rule 33 (expression -> expression GE expression .)
    INTNUM          reduce using rule 33 (expression -> expression GE expression .)
    FLOATNUM        reduce using rule 33 (expression -> expression GE expression .)
    [               reduce using rule 33 (expression -> expression GE expression .)
    IF              reduce using rule 33 (expression -> expression GE expression .)
    RETURN          reduce using rule 33 (expression -> expression GE expression .)
    PRINT           reduce using rule 33 (expression -> expression GE expression .)
    {               reduce using rule 33 (expression -> expression GE expression .)
    ID              reduce using rule 33 (expression -> expression GE expression .)
    EYE             reduce using rule 33 (expression -> expression GE expression .)
    ZEROS           reduce using rule 33 (expression -> expression GE expression .)
    ONES            reduce using rule 33 (expression -> expression GE expression .)
    FOR             reduce using rule 33 (expression -> expression GE expression .)
    WHILE           reduce using rule 33 (expression -> expression GE expression .)
    $end            reduce using rule 33 (expression -> expression GE expression .)
    ;               reduce using rule 33 (expression -> expression GE expression .)
    ,               reduce using rule 33 (expression -> expression GE expression .)
    }               reduce using rule 33 (expression -> expression GE expression .)
    )               reduce using rule 33 (expression -> expression GE expression .)
    ]               reduce using rule 33 (expression -> expression GE expression .)
    :               reduce using rule 33 (expression -> expression GE expression .)
    ELSE            reduce using rule 33 (expression -> expression GE expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48

  ! +               [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! -               [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! *               [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! /               [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! DOTADD          [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! DOTSUB          [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! DOTMUL          [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! DOTDIV          [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! EQ              [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! >               [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! <               [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! DIFF            [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! '               [ reduce using rule 33 (expression -> expression GE expression .) ]


state 83

    (34) expression -> expression EQ expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for ' resolved as shift
    BREAK           reduce using rule 34 (expression -> expression EQ expression .)
    CONTINUE        reduce using rule 34 (expression -> expression EQ expression .)
    INTNUM          reduce using rule 34 (expression -> expression EQ expression .)
    FLOATNUM        reduce using rule 34 (expression -> expression EQ expression .)
    [               reduce using rule 34 (expression -> expression EQ expression .)
    IF              reduce using rule 34 (expression -> expression EQ expression .)
    RETURN          reduce using rule 34 (expression -> expression EQ expression .)
    PRINT           reduce using rule 34 (expression -> expression EQ expression .)
    {               reduce using rule 34 (expression -> expression EQ expression .)
    ID              reduce using rule 34 (expression -> expression EQ expression .)
    EYE             reduce using rule 34 (expression -> expression EQ expression .)
    ZEROS           reduce using rule 34 (expression -> expression EQ expression .)
    ONES            reduce using rule 34 (expression -> expression EQ expression .)
    FOR             reduce using rule 34 (expression -> expression EQ expression .)
    WHILE           reduce using rule 34 (expression -> expression EQ expression .)
    $end            reduce using rule 34 (expression -> expression EQ expression .)
    ;               reduce using rule 34 (expression -> expression EQ expression .)
    ,               reduce using rule 34 (expression -> expression EQ expression .)
    }               reduce using rule 34 (expression -> expression EQ expression .)
    )               reduce using rule 34 (expression -> expression EQ expression .)
    ]               reduce using rule 34 (expression -> expression EQ expression .)
    :               reduce using rule 34 (expression -> expression EQ expression .)
    ELSE            reduce using rule 34 (expression -> expression EQ expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48

  ! +               [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! -               [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! *               [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! /               [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! DOTADD          [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! DOTSUB          [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! DOTMUL          [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! DOTDIV          [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! >               [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! <               [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! DIFF            [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! '               [ reduce using rule 34 (expression -> expression EQ expression .) ]


state 84

    (35) expression -> expression > expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for ' resolved as shift
    BREAK           reduce using rule 35 (expression -> expression > expression .)
    CONTINUE        reduce using rule 35 (expression -> expression > expression .)
    INTNUM          reduce using rule 35 (expression -> expression > expression .)
    FLOATNUM        reduce using rule 35 (expression -> expression > expression .)
    [               reduce using rule 35 (expression -> expression > expression .)
    IF              reduce using rule 35 (expression -> expression > expression .)
    RETURN          reduce using rule 35 (expression -> expression > expression .)
    PRINT           reduce using rule 35 (expression -> expression > expression .)
    {               reduce using rule 35 (expression -> expression > expression .)
    ID              reduce using rule 35 (expression -> expression > expression .)
    EYE             reduce using rule 35 (expression -> expression > expression .)
    ZEROS           reduce using rule 35 (expression -> expression > expression .)
    ONES            reduce using rule 35 (expression -> expression > expression .)
    FOR             reduce using rule 35 (expression -> expression > expression .)
    WHILE           reduce using rule 35 (expression -> expression > expression .)
    $end            reduce using rule 35 (expression -> expression > expression .)
    ;               reduce using rule 35 (expression -> expression > expression .)
    ,               reduce using rule 35 (expression -> expression > expression .)
    }               reduce using rule 35 (expression -> expression > expression .)
    )               reduce using rule 35 (expression -> expression > expression .)
    ]               reduce using rule 35 (expression -> expression > expression .)
    :               reduce using rule 35 (expression -> expression > expression .)
    ELSE            reduce using rule 35 (expression -> expression > expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48

  ! +               [ reduce using rule 35 (expression -> expression > expression .) ]
  ! -               [ reduce using rule 35 (expression -> expression > expression .) ]
  ! *               [ reduce using rule 35 (expression -> expression > expression .) ]
  ! /               [ reduce using rule 35 (expression -> expression > expression .) ]
  ! DOTADD          [ reduce using rule 35 (expression -> expression > expression .) ]
  ! DOTSUB          [ reduce using rule 35 (expression -> expression > expression .) ]
  ! DOTMUL          [ reduce using rule 35 (expression -> expression > expression .) ]
  ! DOTDIV          [ reduce using rule 35 (expression -> expression > expression .) ]
  ! LE              [ reduce using rule 35 (expression -> expression > expression .) ]
  ! GE              [ reduce using rule 35 (expression -> expression > expression .) ]
  ! EQ              [ reduce using rule 35 (expression -> expression > expression .) ]
  ! >               [ reduce using rule 35 (expression -> expression > expression .) ]
  ! <               [ reduce using rule 35 (expression -> expression > expression .) ]
  ! DIFF            [ reduce using rule 35 (expression -> expression > expression .) ]
  ! '               [ reduce using rule 35 (expression -> expression > expression .) ]


state 85

    (36) expression -> expression < expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for ' resolved as shift
    BREAK           reduce using rule 36 (expression -> expression < expression .)
    CONTINUE        reduce using rule 36 (expression -> expression < expression .)
    INTNUM          reduce using rule 36 (expression -> expression < expression .)
    FLOATNUM        reduce using rule 36 (expression -> expression < expression .)
    [               reduce using rule 36 (expression -> expression < expression .)
    IF              reduce using rule 36 (expression -> expression < expression .)
    RETURN          reduce using rule 36 (expression -> expression < expression .)
    PRINT           reduce using rule 36 (expression -> expression < expression .)
    {               reduce using rule 36 (expression -> expression < expression .)
    ID              reduce using rule 36 (expression -> expression < expression .)
    EYE             reduce using rule 36 (expression -> expression < expression .)
    ZEROS           reduce using rule 36 (expression -> expression < expression .)
    ONES            reduce using rule 36 (expression -> expression < expression .)
    FOR             reduce using rule 36 (expression -> expression < expression .)
    WHILE           reduce using rule 36 (expression -> expression < expression .)
    $end            reduce using rule 36 (expression -> expression < expression .)
    ;               reduce using rule 36 (expression -> expression < expression .)
    ,               reduce using rule 36 (expression -> expression < expression .)
    }               reduce using rule 36 (expression -> expression < expression .)
    )               reduce using rule 36 (expression -> expression < expression .)
    ]               reduce using rule 36 (expression -> expression < expression .)
    :               reduce using rule 36 (expression -> expression < expression .)
    ELSE            reduce using rule 36 (expression -> expression < expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48

  ! +               [ reduce using rule 36 (expression -> expression < expression .) ]
  ! -               [ reduce using rule 36 (expression -> expression < expression .) ]
  ! *               [ reduce using rule 36 (expression -> expression < expression .) ]
  ! /               [ reduce using rule 36 (expression -> expression < expression .) ]
  ! DOTADD          [ reduce using rule 36 (expression -> expression < expression .) ]
  ! DOTSUB          [ reduce using rule 36 (expression -> expression < expression .) ]
  ! DOTMUL          [ reduce using rule 36 (expression -> expression < expression .) ]
  ! DOTDIV          [ reduce using rule 36 (expression -> expression < expression .) ]
  ! LE              [ reduce using rule 36 (expression -> expression < expression .) ]
  ! GE              [ reduce using rule 36 (expression -> expression < expression .) ]
  ! EQ              [ reduce using rule 36 (expression -> expression < expression .) ]
  ! >               [ reduce using rule 36 (expression -> expression < expression .) ]
  ! <               [ reduce using rule 36 (expression -> expression < expression .) ]
  ! DIFF            [ reduce using rule 36 (expression -> expression < expression .) ]
  ! '               [ reduce using rule 36 (expression -> expression < expression .) ]


state 86

    (37) expression -> expression DIFF expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for ' resolved as shift
    BREAK           reduce using rule 37 (expression -> expression DIFF expression .)
    CONTINUE        reduce using rule 37 (expression -> expression DIFF expression .)
    INTNUM          reduce using rule 37 (expression -> expression DIFF expression .)
    FLOATNUM        reduce using rule 37 (expression -> expression DIFF expression .)
    [               reduce using rule 37 (expression -> expression DIFF expression .)
    IF              reduce using rule 37 (expression -> expression DIFF expression .)
    RETURN          reduce using rule 37 (expression -> expression DIFF expression .)
    PRINT           reduce using rule 37 (expression -> expression DIFF expression .)
    {               reduce using rule 37 (expression -> expression DIFF expression .)
    ID              reduce using rule 37 (expression -> expression DIFF expression .)
    EYE             reduce using rule 37 (expression -> expression DIFF expression .)
    ZEROS           reduce using rule 37 (expression -> expression DIFF expression .)
    ONES            reduce using rule 37 (expression -> expression DIFF expression .)
    FOR             reduce using rule 37 (expression -> expression DIFF expression .)
    WHILE           reduce using rule 37 (expression -> expression DIFF expression .)
    $end            reduce using rule 37 (expression -> expression DIFF expression .)
    ;               reduce using rule 37 (expression -> expression DIFF expression .)
    ,               reduce using rule 37 (expression -> expression DIFF expression .)
    }               reduce using rule 37 (expression -> expression DIFF expression .)
    )               reduce using rule 37 (expression -> expression DIFF expression .)
    ]               reduce using rule 37 (expression -> expression DIFF expression .)
    :               reduce using rule 37 (expression -> expression DIFF expression .)
    ELSE            reduce using rule 37 (expression -> expression DIFF expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48

  ! +               [ reduce using rule 37 (expression -> expression DIFF expression .) ]
  ! -               [ reduce using rule 37 (expression -> expression DIFF expression .) ]
  ! *               [ reduce using rule 37 (expression -> expression DIFF expression .) ]
  ! /               [ reduce using rule 37 (expression -> expression DIFF expression .) ]
  ! DOTADD          [ reduce using rule 37 (expression -> expression DIFF expression .) ]
  ! DOTSUB          [ reduce using rule 37 (expression -> expression DIFF expression .) ]
  ! DOTMUL          [ reduce using rule 37 (expression -> expression DIFF expression .) ]
  ! DOTDIV          [ reduce using rule 37 (expression -> expression DIFF expression .) ]
  ! LE              [ reduce using rule 37 (expression -> expression DIFF expression .) ]
  ! GE              [ reduce using rule 37 (expression -> expression DIFF expression .) ]
  ! EQ              [ reduce using rule 37 (expression -> expression DIFF expression .) ]
  ! >               [ reduce using rule 37 (expression -> expression DIFF expression .) ]
  ! <               [ reduce using rule 37 (expression -> expression DIFF expression .) ]
  ! DIFF            [ reduce using rule 37 (expression -> expression DIFF expression .) ]
  ! '               [ reduce using rule 37 (expression -> expression DIFF expression .) ]


state 87

    (16) assignment -> assignable = expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    ;               reduce using rule 16 (assignment -> assignable = expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48


state 88

    (17) assignment -> assignable ADDASSIGN expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    ;               reduce using rule 17 (assignment -> assignable ADDASSIGN expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48


state 89

    (18) assignment -> assignable SUBASSIGN expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    ;               reduce using rule 18 (assignment -> assignable SUBASSIGN expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48


state 90

    (19) assignment -> assignable MULASSIGN expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    ;               reduce using rule 19 (assignment -> assignable MULASSIGN expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48


state 91

    (20) assignment -> assignable DIVASSIGN expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    ;               reduce using rule 20 (assignment -> assignable DIVASSIGN expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48


state 92

    (42) expression -> special ( expression . )
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    )               shift and go to state 103
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48


state 93

    (49) minit -> [ matrixcontents . ]
    (51) matrixcontents -> matrixcontents . , expression

    ]               shift and go to state 104
    ,               shift and go to state 105


state 94

    (50) matrixcontents -> expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    ]               reduce using rule 50 (matrixcontents -> expression .)
    ,               reduce using rule 50 (matrixcontents -> expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48


state 95

    (43) expression -> [ minit ] .

    +               reduce using rule 43 (expression -> [ minit ] .)
    -               reduce using rule 43 (expression -> [ minit ] .)
    *               reduce using rule 43 (expression -> [ minit ] .)
    /               reduce using rule 43 (expression -> [ minit ] .)
    DOTADD          reduce using rule 43 (expression -> [ minit ] .)
    DOTSUB          reduce using rule 43 (expression -> [ minit ] .)
    DOTMUL          reduce using rule 43 (expression -> [ minit ] .)
    DOTDIV          reduce using rule 43 (expression -> [ minit ] .)
    LE              reduce using rule 43 (expression -> [ minit ] .)
    GE              reduce using rule 43 (expression -> [ minit ] .)
    EQ              reduce using rule 43 (expression -> [ minit ] .)
    >               reduce using rule 43 (expression -> [ minit ] .)
    <               reduce using rule 43 (expression -> [ minit ] .)
    DIFF            reduce using rule 43 (expression -> [ minit ] .)
    '               reduce using rule 43 (expression -> [ minit ] .)
    BREAK           reduce using rule 43 (expression -> [ minit ] .)
    CONTINUE        reduce using rule 43 (expression -> [ minit ] .)
    INTNUM          reduce using rule 43 (expression -> [ minit ] .)
    FLOATNUM        reduce using rule 43 (expression -> [ minit ] .)
    [               reduce using rule 43 (expression -> [ minit ] .)
    IF              reduce using rule 43 (expression -> [ minit ] .)
    RETURN          reduce using rule 43 (expression -> [ minit ] .)
    PRINT           reduce using rule 43 (expression -> [ minit ] .)
    {               reduce using rule 43 (expression -> [ minit ] .)
    ID              reduce using rule 43 (expression -> [ minit ] .)
    EYE             reduce using rule 43 (expression -> [ minit ] .)
    ZEROS           reduce using rule 43 (expression -> [ minit ] .)
    ONES            reduce using rule 43 (expression -> [ minit ] .)
    FOR             reduce using rule 43 (expression -> [ minit ] .)
    WHILE           reduce using rule 43 (expression -> [ minit ] .)
    $end            reduce using rule 43 (expression -> [ minit ] .)
    ;               reduce using rule 43 (expression -> [ minit ] .)
    ,               reduce using rule 43 (expression -> [ minit ] .)
    }               reduce using rule 43 (expression -> [ minit ] .)
    )               reduce using rule 43 (expression -> [ minit ] .)
    ]               reduce using rule 43 (expression -> [ minit ] .)
    :               reduce using rule 43 (expression -> [ minit ] .)
    ELSE            reduce using rule 43 (expression -> [ minit ] .)


state 96

    (48) minit -> minit , . [ matrixcontents ]

    [               shift and go to state 106


state 97

    (52) ifexpr -> IF ( expression . ) instruction
    (53) ifexpr -> IF ( expression . ) instruction ELSE instruction
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    )               shift and go to state 107
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48


state 98

    (63) printable -> printable , . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 108
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 99

    (15) complexinstruction -> { instructions } .

    BREAK           reduce using rule 15 (complexinstruction -> { instructions } .)
    CONTINUE        reduce using rule 15 (complexinstruction -> { instructions } .)
    INTNUM          reduce using rule 15 (complexinstruction -> { instructions } .)
    FLOATNUM        reduce using rule 15 (complexinstruction -> { instructions } .)
    [               reduce using rule 15 (complexinstruction -> { instructions } .)
    -               reduce using rule 15 (complexinstruction -> { instructions } .)
    IF              reduce using rule 15 (complexinstruction -> { instructions } .)
    RETURN          reduce using rule 15 (complexinstruction -> { instructions } .)
    PRINT           reduce using rule 15 (complexinstruction -> { instructions } .)
    {               reduce using rule 15 (complexinstruction -> { instructions } .)
    ID              reduce using rule 15 (complexinstruction -> { instructions } .)
    EYE             reduce using rule 15 (complexinstruction -> { instructions } .)
    ZEROS           reduce using rule 15 (complexinstruction -> { instructions } .)
    ONES            reduce using rule 15 (complexinstruction -> { instructions } .)
    FOR             reduce using rule 15 (complexinstruction -> { instructions } .)
    WHILE           reduce using rule 15 (complexinstruction -> { instructions } .)
    $end            reduce using rule 15 (complexinstruction -> { instructions } .)
    }               reduce using rule 15 (complexinstruction -> { instructions } .)
    ELSE            reduce using rule 15 (complexinstruction -> { instructions } .)


state 100

    (23) matrixelement -> ID [ expression . , expression ]
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    ,               shift and go to state 109
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48


state 101

    (56) forloop -> FOR ID = . range instruction
    (58) range -> . expression : expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    range                          shift and go to state 110
    expression                     shift and go to state 111
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 102

    (57) whileloop -> WHILE ( expression . ) instruction
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    )               shift and go to state 112
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48


state 103

    (42) expression -> special ( expression ) .

    +               reduce using rule 42 (expression -> special ( expression ) .)
    -               reduce using rule 42 (expression -> special ( expression ) .)
    *               reduce using rule 42 (expression -> special ( expression ) .)
    /               reduce using rule 42 (expression -> special ( expression ) .)
    DOTADD          reduce using rule 42 (expression -> special ( expression ) .)
    DOTSUB          reduce using rule 42 (expression -> special ( expression ) .)
    DOTMUL          reduce using rule 42 (expression -> special ( expression ) .)
    DOTDIV          reduce using rule 42 (expression -> special ( expression ) .)
    LE              reduce using rule 42 (expression -> special ( expression ) .)
    GE              reduce using rule 42 (expression -> special ( expression ) .)
    EQ              reduce using rule 42 (expression -> special ( expression ) .)
    >               reduce using rule 42 (expression -> special ( expression ) .)
    <               reduce using rule 42 (expression -> special ( expression ) .)
    DIFF            reduce using rule 42 (expression -> special ( expression ) .)
    '               reduce using rule 42 (expression -> special ( expression ) .)
    BREAK           reduce using rule 42 (expression -> special ( expression ) .)
    CONTINUE        reduce using rule 42 (expression -> special ( expression ) .)
    INTNUM          reduce using rule 42 (expression -> special ( expression ) .)
    FLOATNUM        reduce using rule 42 (expression -> special ( expression ) .)
    [               reduce using rule 42 (expression -> special ( expression ) .)
    IF              reduce using rule 42 (expression -> special ( expression ) .)
    RETURN          reduce using rule 42 (expression -> special ( expression ) .)
    PRINT           reduce using rule 42 (expression -> special ( expression ) .)
    {               reduce using rule 42 (expression -> special ( expression ) .)
    ID              reduce using rule 42 (expression -> special ( expression ) .)
    EYE             reduce using rule 42 (expression -> special ( expression ) .)
    ZEROS           reduce using rule 42 (expression -> special ( expression ) .)
    ONES            reduce using rule 42 (expression -> special ( expression ) .)
    FOR             reduce using rule 42 (expression -> special ( expression ) .)
    WHILE           reduce using rule 42 (expression -> special ( expression ) .)
    $end            reduce using rule 42 (expression -> special ( expression ) .)
    ;               reduce using rule 42 (expression -> special ( expression ) .)
    ,               reduce using rule 42 (expression -> special ( expression ) .)
    }               reduce using rule 42 (expression -> special ( expression ) .)
    )               reduce using rule 42 (expression -> special ( expression ) .)
    ]               reduce using rule 42 (expression -> special ( expression ) .)
    :               reduce using rule 42 (expression -> special ( expression ) .)
    ELSE            reduce using rule 42 (expression -> special ( expression ) .)


state 104

    (49) minit -> [ matrixcontents ] .

    ]               reduce using rule 49 (minit -> [ matrixcontents ] .)
    ,               reduce using rule 49 (minit -> [ matrixcontents ] .)


state 105

    (51) matrixcontents -> matrixcontents , . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 113
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 106

    (48) minit -> minit , [ . matrixcontents ]
    (50) matrixcontents -> . expression
    (51) matrixcontents -> . matrixcontents , expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    matrixcontents                 shift and go to state 114
    expression                     shift and go to state 94
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 107

    (52) ifexpr -> IF ( expression ) . instruction
    (53) ifexpr -> IF ( expression ) . instruction ELSE instruction
    (6) instruction -> . expression
    (7) instruction -> . assignment ;
    (8) instruction -> . ifexpr
    (9) instruction -> . loop
    (10) instruction -> . returnexpr ;
    (11) instruction -> . printexpr ;
    (12) instruction -> . BREAK ;
    (13) instruction -> . CONTINUE ;
    (14) instruction -> . complexinstruction
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (16) assignment -> . assignable = expression
    (17) assignment -> . assignable ADDASSIGN expression
    (18) assignment -> . assignable SUBASSIGN expression
    (19) assignment -> . assignable MULASSIGN expression
    (20) assignment -> . assignable DIVASSIGN expression
    (52) ifexpr -> . IF ( expression ) instruction
    (53) ifexpr -> . IF ( expression ) instruction ELSE instruction
    (54) loop -> . forloop
    (55) loop -> . whileloop
    (59) returnexpr -> . RETURN expression
    (60) printexpr -> . PRINT printable
    (15) complexinstruction -> . { instructions }
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (56) forloop -> . FOR ID = range instruction
    (57) whileloop -> . WHILE ( expression ) instruction
    (23) matrixelement -> . ID [ expression , expression ]

    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    IF              shift and go to state 20
    RETURN          shift and go to state 23
    PRINT           shift and go to state 24
    {               shift and go to state 25
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32

    expression                     shift and go to state 5
    instruction                    shift and go to state 115
    assignment                     shift and go to state 6
    ifexpr                         shift and go to state 7
    loop                           shift and go to state 8
    returnexpr                     shift and go to state 9
    printexpr                      shift and go to state 10
    complexinstruction             shift and go to state 13
    assignable                     shift and go to state 17
    special                        shift and go to state 18
    forloop                        shift and go to state 21
    whileloop                      shift and go to state 22
    matrixelement                  shift and go to state 27

state 108

    (63) printable -> printable , expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    ,               reduce using rule 63 (printable -> printable , expression .)
    ;               reduce using rule 63 (printable -> printable , expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48


state 109

    (23) matrixelement -> ID [ expression , . expression ]
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 116
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 110

    (56) forloop -> FOR ID = range . instruction
    (6) instruction -> . expression
    (7) instruction -> . assignment ;
    (8) instruction -> . ifexpr
    (9) instruction -> . loop
    (10) instruction -> . returnexpr ;
    (11) instruction -> . printexpr ;
    (12) instruction -> . BREAK ;
    (13) instruction -> . CONTINUE ;
    (14) instruction -> . complexinstruction
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (16) assignment -> . assignable = expression
    (17) assignment -> . assignable ADDASSIGN expression
    (18) assignment -> . assignable SUBASSIGN expression
    (19) assignment -> . assignable MULASSIGN expression
    (20) assignment -> . assignable DIVASSIGN expression
    (52) ifexpr -> . IF ( expression ) instruction
    (53) ifexpr -> . IF ( expression ) instruction ELSE instruction
    (54) loop -> . forloop
    (55) loop -> . whileloop
    (59) returnexpr -> . RETURN expression
    (60) printexpr -> . PRINT printable
    (15) complexinstruction -> . { instructions }
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (56) forloop -> . FOR ID = range instruction
    (57) whileloop -> . WHILE ( expression ) instruction
    (23) matrixelement -> . ID [ expression , expression ]

    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    IF              shift and go to state 20
    RETURN          shift and go to state 23
    PRINT           shift and go to state 24
    {               shift and go to state 25
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32

    instruction                    shift and go to state 117
    expression                     shift and go to state 5
    assignment                     shift and go to state 6
    ifexpr                         shift and go to state 7
    loop                           shift and go to state 8
    returnexpr                     shift and go to state 9
    printexpr                      shift and go to state 10
    complexinstruction             shift and go to state 13
    assignable                     shift and go to state 17
    special                        shift and go to state 18
    forloop                        shift and go to state 21
    whileloop                      shift and go to state 22
    matrixelement                  shift and go to state 27

state 111

    (58) range -> expression . : expression
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    :               shift and go to state 118
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48


state 112

    (57) whileloop -> WHILE ( expression ) . instruction
    (6) instruction -> . expression
    (7) instruction -> . assignment ;
    (8) instruction -> . ifexpr
    (9) instruction -> . loop
    (10) instruction -> . returnexpr ;
    (11) instruction -> . printexpr ;
    (12) instruction -> . BREAK ;
    (13) instruction -> . CONTINUE ;
    (14) instruction -> . complexinstruction
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (16) assignment -> . assignable = expression
    (17) assignment -> . assignable ADDASSIGN expression
    (18) assignment -> . assignable SUBASSIGN expression
    (19) assignment -> . assignable MULASSIGN expression
    (20) assignment -> . assignable DIVASSIGN expression
    (52) ifexpr -> . IF ( expression ) instruction
    (53) ifexpr -> . IF ( expression ) instruction ELSE instruction
    (54) loop -> . forloop
    (55) loop -> . whileloop
    (59) returnexpr -> . RETURN expression
    (60) printexpr -> . PRINT printable
    (15) complexinstruction -> . { instructions }
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (56) forloop -> . FOR ID = range instruction
    (57) whileloop -> . WHILE ( expression ) instruction
    (23) matrixelement -> . ID [ expression , expression ]

    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    IF              shift and go to state 20
    RETURN          shift and go to state 23
    PRINT           shift and go to state 24
    {               shift and go to state 25
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32

    expression                     shift and go to state 5
    instruction                    shift and go to state 119
    assignment                     shift and go to state 6
    ifexpr                         shift and go to state 7
    loop                           shift and go to state 8
    returnexpr                     shift and go to state 9
    printexpr                      shift and go to state 10
    complexinstruction             shift and go to state 13
    assignable                     shift and go to state 17
    special                        shift and go to state 18
    forloop                        shift and go to state 21
    whileloop                      shift and go to state 22
    matrixelement                  shift and go to state 27

state 113

    (51) matrixcontents -> matrixcontents , expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    ]               reduce using rule 51 (matrixcontents -> matrixcontents , expression .)
    ,               reduce using rule 51 (matrixcontents -> matrixcontents , expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48


state 114

    (48) minit -> minit , [ matrixcontents . ]
    (51) matrixcontents -> matrixcontents . , expression

    ]               shift and go to state 120
    ,               shift and go to state 105


state 115

    (52) ifexpr -> IF ( expression ) instruction .
    (53) ifexpr -> IF ( expression ) instruction . ELSE instruction

    BREAK           reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    CONTINUE        reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    INTNUM          reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    FLOATNUM        reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    [               reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    -               reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    IF              reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    RETURN          reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    PRINT           reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    {               reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    ID              reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    EYE             reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    ZEROS           reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    ONES            reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    FOR             reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    WHILE           reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    $end            reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    }               reduce using rule 52 (ifexpr -> IF ( expression ) instruction .)
    ELSE            shift and go to state 121

  ! ELSE            [ reduce using rule 52 (ifexpr -> IF ( expression ) instruction .) ]


state 116

    (23) matrixelement -> ID [ expression , expression . ]
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

    ]               shift and go to state 122
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48


state 117

    (56) forloop -> FOR ID = range instruction .

    BREAK           reduce using rule 56 (forloop -> FOR ID = range instruction .)
    CONTINUE        reduce using rule 56 (forloop -> FOR ID = range instruction .)
    INTNUM          reduce using rule 56 (forloop -> FOR ID = range instruction .)
    FLOATNUM        reduce using rule 56 (forloop -> FOR ID = range instruction .)
    [               reduce using rule 56 (forloop -> FOR ID = range instruction .)
    -               reduce using rule 56 (forloop -> FOR ID = range instruction .)
    IF              reduce using rule 56 (forloop -> FOR ID = range instruction .)
    RETURN          reduce using rule 56 (forloop -> FOR ID = range instruction .)
    PRINT           reduce using rule 56 (forloop -> FOR ID = range instruction .)
    {               reduce using rule 56 (forloop -> FOR ID = range instruction .)
    ID              reduce using rule 56 (forloop -> FOR ID = range instruction .)
    EYE             reduce using rule 56 (forloop -> FOR ID = range instruction .)
    ZEROS           reduce using rule 56 (forloop -> FOR ID = range instruction .)
    ONES            reduce using rule 56 (forloop -> FOR ID = range instruction .)
    FOR             reduce using rule 56 (forloop -> FOR ID = range instruction .)
    WHILE           reduce using rule 56 (forloop -> FOR ID = range instruction .)
    $end            reduce using rule 56 (forloop -> FOR ID = range instruction .)
    }               reduce using rule 56 (forloop -> FOR ID = range instruction .)
    ELSE            reduce using rule 56 (forloop -> FOR ID = range instruction .)


state 118

    (58) range -> expression : . expression
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (23) matrixelement -> . ID [ expression , expression ]

    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 123
    assignable                     shift and go to state 55
    special                        shift and go to state 18
    matrixelement                  shift and go to state 27

state 119

    (57) whileloop -> WHILE ( expression ) instruction .

    BREAK           reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    CONTINUE        reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    INTNUM          reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    FLOATNUM        reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    [               reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    -               reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    IF              reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    RETURN          reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    PRINT           reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    {               reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    ID              reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    EYE             reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    ZEROS           reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    ONES            reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    FOR             reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    WHILE           reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    $end            reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    }               reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)
    ELSE            reduce using rule 57 (whileloop -> WHILE ( expression ) instruction .)


state 120

    (48) minit -> minit , [ matrixcontents ] .

    ]               reduce using rule 48 (minit -> minit , [ matrixcontents ] .)
    ,               reduce using rule 48 (minit -> minit , [ matrixcontents ] .)


state 121

    (53) ifexpr -> IF ( expression ) instruction ELSE . instruction
    (6) instruction -> . expression
    (7) instruction -> . assignment ;
    (8) instruction -> . ifexpr
    (9) instruction -> . loop
    (10) instruction -> . returnexpr ;
    (11) instruction -> . printexpr ;
    (12) instruction -> . BREAK ;
    (13) instruction -> . CONTINUE ;
    (14) instruction -> . complexinstruction
    (24) expression -> . expression + expression
    (25) expression -> . expression - expression
    (26) expression -> . expression * expression
    (27) expression -> . expression / expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . expression DOTSUB expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTDIV expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression > expression
    (36) expression -> . expression < expression
    (37) expression -> . expression DIFF expression
    (38) expression -> . expression '
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (42) expression -> . special ( expression )
    (43) expression -> . [ minit ]
    (44) expression -> . - expression
    (16) assignment -> . assignable = expression
    (17) assignment -> . assignable ADDASSIGN expression
    (18) assignment -> . assignable SUBASSIGN expression
    (19) assignment -> . assignable MULASSIGN expression
    (20) assignment -> . assignable DIVASSIGN expression
    (52) ifexpr -> . IF ( expression ) instruction
    (53) ifexpr -> . IF ( expression ) instruction ELSE instruction
    (54) loop -> . forloop
    (55) loop -> . whileloop
    (59) returnexpr -> . RETURN expression
    (60) printexpr -> . PRINT printable
    (15) complexinstruction -> . { instructions }
    (21) assignable -> . ID
    (22) assignable -> . matrixelement
    (45) special -> . EYE
    (46) special -> . ZEROS
    (47) special -> . ONES
    (56) forloop -> . FOR ID = range instruction
    (57) whileloop -> . WHILE ( expression ) instruction
    (23) matrixelement -> . ID [ expression , expression ]

    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    INTNUM          shift and go to state 15
    FLOATNUM        shift and go to state 16
    [               shift and go to state 19
    -               shift and go to state 14
    IF              shift and go to state 20
    RETURN          shift and go to state 23
    PRINT           shift and go to state 24
    {               shift and go to state 25
    ID              shift and go to state 26
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32

    expression                     shift and go to state 5
    instruction                    shift and go to state 124
    assignment                     shift and go to state 6
    ifexpr                         shift and go to state 7
    loop                           shift and go to state 8
    returnexpr                     shift and go to state 9
    printexpr                      shift and go to state 10
    complexinstruction             shift and go to state 13
    assignable                     shift and go to state 17
    special                        shift and go to state 18
    forloop                        shift and go to state 21
    whileloop                      shift and go to state 22
    matrixelement                  shift and go to state 27

state 122

    (23) matrixelement -> ID [ expression , expression ] .

    =               reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    ADDASSIGN       reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    SUBASSIGN       reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    MULASSIGN       reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    DIVASSIGN       reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    +               reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    -               reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    *               reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    /               reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    DOTADD          reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    DOTSUB          reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    DOTMUL          reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    DOTDIV          reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    LE              reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    GE              reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    EQ              reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    >               reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    <               reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    DIFF            reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    '               reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    BREAK           reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    CONTINUE        reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    INTNUM          reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    FLOATNUM        reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    [               reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    IF              reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    RETURN          reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    PRINT           reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    {               reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    ID              reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    EYE             reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    ZEROS           reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    ONES            reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    FOR             reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    WHILE           reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    $end            reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    ;               reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    ,               reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    }               reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    )               reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    ]               reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    :               reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)
    ELSE            reduce using rule 23 (matrixelement -> ID [ expression , expression ] .)


state 123

    (58) range -> expression : expression .
    (24) expression -> expression . + expression
    (25) expression -> expression . - expression
    (26) expression -> expression . * expression
    (27) expression -> expression . / expression
    (28) expression -> expression . DOTADD expression
    (29) expression -> expression . DOTSUB expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTDIV expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . > expression
    (36) expression -> expression . < expression
    (37) expression -> expression . DIFF expression
    (38) expression -> expression . '

  ! shift/reduce conflict for - resolved as shift
    BREAK           reduce using rule 58 (range -> expression : expression .)
    CONTINUE        reduce using rule 58 (range -> expression : expression .)
    INTNUM          reduce using rule 58 (range -> expression : expression .)
    FLOATNUM        reduce using rule 58 (range -> expression : expression .)
    [               reduce using rule 58 (range -> expression : expression .)
    IF              reduce using rule 58 (range -> expression : expression .)
    RETURN          reduce using rule 58 (range -> expression : expression .)
    PRINT           reduce using rule 58 (range -> expression : expression .)
    {               reduce using rule 58 (range -> expression : expression .)
    ID              reduce using rule 58 (range -> expression : expression .)
    EYE             reduce using rule 58 (range -> expression : expression .)
    ZEROS           reduce using rule 58 (range -> expression : expression .)
    ONES            reduce using rule 58 (range -> expression : expression .)
    FOR             reduce using rule 58 (range -> expression : expression .)
    WHILE           reduce using rule 58 (range -> expression : expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    DIFF            shift and go to state 47
    '               shift and go to state 48

  ! -               [ reduce using rule 58 (range -> expression : expression .) ]


state 124

    (53) ifexpr -> IF ( expression ) instruction ELSE instruction .

    BREAK           reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    INTNUM          reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    FLOATNUM        reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    [               reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    -               reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    IF              reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    RETURN          reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    PRINT           reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    {               reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    ID              reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    EYE             reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    ZEROS           reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    ONES            reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    FOR             reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    WHILE           reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    $end            reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    }               reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)
    ELSE            reduce using rule 53 (ifexpr -> IF ( expression ) instruction ELSE instruction .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for - in state 5 resolved as shift
WARNING: shift/reduce conflict for [ in state 26 resolved as shift
WARNING: shift/reduce conflict for + in state 77 resolved as shift
WARNING: shift/reduce conflict for - in state 77 resolved as shift
WARNING: shift/reduce conflict for * in state 77 resolved as shift
WARNING: shift/reduce conflict for / in state 77 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 77 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 77 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 77 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 77 resolved as shift
WARNING: shift/reduce conflict for LE in state 77 resolved as shift
WARNING: shift/reduce conflict for GE in state 77 resolved as shift
WARNING: shift/reduce conflict for EQ in state 77 resolved as shift
WARNING: shift/reduce conflict for > in state 77 resolved as shift
WARNING: shift/reduce conflict for < in state 77 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 77 resolved as shift
WARNING: shift/reduce conflict for ' in state 77 resolved as shift
WARNING: shift/reduce conflict for + in state 78 resolved as shift
WARNING: shift/reduce conflict for - in state 78 resolved as shift
WARNING: shift/reduce conflict for * in state 78 resolved as shift
WARNING: shift/reduce conflict for / in state 78 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 78 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 78 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 78 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 78 resolved as shift
WARNING: shift/reduce conflict for LE in state 78 resolved as shift
WARNING: shift/reduce conflict for GE in state 78 resolved as shift
WARNING: shift/reduce conflict for EQ in state 78 resolved as shift
WARNING: shift/reduce conflict for > in state 78 resolved as shift
WARNING: shift/reduce conflict for < in state 78 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 78 resolved as shift
WARNING: shift/reduce conflict for ' in state 78 resolved as shift
WARNING: shift/reduce conflict for + in state 79 resolved as shift
WARNING: shift/reduce conflict for - in state 79 resolved as shift
WARNING: shift/reduce conflict for * in state 79 resolved as shift
WARNING: shift/reduce conflict for / in state 79 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 79 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 79 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 79 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 79 resolved as shift
WARNING: shift/reduce conflict for LE in state 79 resolved as shift
WARNING: shift/reduce conflict for GE in state 79 resolved as shift
WARNING: shift/reduce conflict for EQ in state 79 resolved as shift
WARNING: shift/reduce conflict for > in state 79 resolved as shift
WARNING: shift/reduce conflict for < in state 79 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 79 resolved as shift
WARNING: shift/reduce conflict for ' in state 79 resolved as shift
WARNING: shift/reduce conflict for + in state 80 resolved as shift
WARNING: shift/reduce conflict for - in state 80 resolved as shift
WARNING: shift/reduce conflict for * in state 80 resolved as shift
WARNING: shift/reduce conflict for / in state 80 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 80 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 80 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 80 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 80 resolved as shift
WARNING: shift/reduce conflict for LE in state 80 resolved as shift
WARNING: shift/reduce conflict for GE in state 80 resolved as shift
WARNING: shift/reduce conflict for EQ in state 80 resolved as shift
WARNING: shift/reduce conflict for > in state 80 resolved as shift
WARNING: shift/reduce conflict for < in state 80 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 80 resolved as shift
WARNING: shift/reduce conflict for ' in state 80 resolved as shift
WARNING: shift/reduce conflict for + in state 81 resolved as shift
WARNING: shift/reduce conflict for - in state 81 resolved as shift
WARNING: shift/reduce conflict for * in state 81 resolved as shift
WARNING: shift/reduce conflict for / in state 81 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 81 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 81 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 81 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 81 resolved as shift
WARNING: shift/reduce conflict for LE in state 81 resolved as shift
WARNING: shift/reduce conflict for GE in state 81 resolved as shift
WARNING: shift/reduce conflict for EQ in state 81 resolved as shift
WARNING: shift/reduce conflict for > in state 81 resolved as shift
WARNING: shift/reduce conflict for < in state 81 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 81 resolved as shift
WARNING: shift/reduce conflict for ' in state 81 resolved as shift
WARNING: shift/reduce conflict for + in state 82 resolved as shift
WARNING: shift/reduce conflict for - in state 82 resolved as shift
WARNING: shift/reduce conflict for * in state 82 resolved as shift
WARNING: shift/reduce conflict for / in state 82 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 82 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 82 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 82 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 82 resolved as shift
WARNING: shift/reduce conflict for LE in state 82 resolved as shift
WARNING: shift/reduce conflict for GE in state 82 resolved as shift
WARNING: shift/reduce conflict for EQ in state 82 resolved as shift
WARNING: shift/reduce conflict for > in state 82 resolved as shift
WARNING: shift/reduce conflict for < in state 82 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 82 resolved as shift
WARNING: shift/reduce conflict for ' in state 82 resolved as shift
WARNING: shift/reduce conflict for + in state 83 resolved as shift
WARNING: shift/reduce conflict for - in state 83 resolved as shift
WARNING: shift/reduce conflict for * in state 83 resolved as shift
WARNING: shift/reduce conflict for / in state 83 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 83 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 83 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 83 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 83 resolved as shift
WARNING: shift/reduce conflict for LE in state 83 resolved as shift
WARNING: shift/reduce conflict for GE in state 83 resolved as shift
WARNING: shift/reduce conflict for EQ in state 83 resolved as shift
WARNING: shift/reduce conflict for > in state 83 resolved as shift
WARNING: shift/reduce conflict for < in state 83 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 83 resolved as shift
WARNING: shift/reduce conflict for ' in state 83 resolved as shift
WARNING: shift/reduce conflict for + in state 84 resolved as shift
WARNING: shift/reduce conflict for - in state 84 resolved as shift
WARNING: shift/reduce conflict for * in state 84 resolved as shift
WARNING: shift/reduce conflict for / in state 84 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 84 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 84 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 84 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 84 resolved as shift
WARNING: shift/reduce conflict for LE in state 84 resolved as shift
WARNING: shift/reduce conflict for GE in state 84 resolved as shift
WARNING: shift/reduce conflict for EQ in state 84 resolved as shift
WARNING: shift/reduce conflict for > in state 84 resolved as shift
WARNING: shift/reduce conflict for < in state 84 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 84 resolved as shift
WARNING: shift/reduce conflict for ' in state 84 resolved as shift
WARNING: shift/reduce conflict for + in state 85 resolved as shift
WARNING: shift/reduce conflict for - in state 85 resolved as shift
WARNING: shift/reduce conflict for * in state 85 resolved as shift
WARNING: shift/reduce conflict for / in state 85 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 85 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 85 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 85 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 85 resolved as shift
WARNING: shift/reduce conflict for LE in state 85 resolved as shift
WARNING: shift/reduce conflict for GE in state 85 resolved as shift
WARNING: shift/reduce conflict for EQ in state 85 resolved as shift
WARNING: shift/reduce conflict for > in state 85 resolved as shift
WARNING: shift/reduce conflict for < in state 85 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 85 resolved as shift
WARNING: shift/reduce conflict for ' in state 85 resolved as shift
WARNING: shift/reduce conflict for + in state 86 resolved as shift
WARNING: shift/reduce conflict for - in state 86 resolved as shift
WARNING: shift/reduce conflict for * in state 86 resolved as shift
WARNING: shift/reduce conflict for / in state 86 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 86 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 86 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 86 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 86 resolved as shift
WARNING: shift/reduce conflict for LE in state 86 resolved as shift
WARNING: shift/reduce conflict for GE in state 86 resolved as shift
WARNING: shift/reduce conflict for EQ in state 86 resolved as shift
WARNING: shift/reduce conflict for > in state 86 resolved as shift
WARNING: shift/reduce conflict for < in state 86 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 86 resolved as shift
WARNING: shift/reduce conflict for ' in state 86 resolved as shift
WARNING: shift/reduce conflict for - in state 123 resolved as shift
