
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFPRECnonassocELSEnonassoc=ADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNleft+-left*/left\'rightUMINUSADDASSIGN BREAK CONTINUE DIFF DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GE ID IF INTNUM LE MULASSIGN ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : instructions_optinstructions_opt : instructions instructions_opt : instructions : instruction instructionsinstructions : instruction instruction : expression\n                    | assignment \';\'\n                    | ifexpr\n                    | loop\n                    | returnexpr \';\'\n                    | printexpr \';\'\n                    | breakOrContinue \';\'\n                    | complexinstructionbreakOrContinue : brk\n                        | cntbrk : BREAKcnt : CONTINUEcomplexinstruction : \'{\' instructions \'}\'assignment : assignable \'=\' expression\n                    | assignable ADDASSIGN expression\n                    | assignable SUBASSIGN expression\n                    | assignable MULASSIGN expression\n                    | assignable DIVASSIGN expression\n                    assignable : ID\n                    | ID \'[\' expression \',\' expression \']\'expression : binexp\n                    | transpose\n                    | num\n                    | assignable\n                    | special \'(\' expression \')\'\n                    | \'[\' minit \']\'\n                    | \'-\' expression %prec UMINUStranspose : expression "\'"\n    num : int\n            | floatint : INTNUMfloat : FLOATNUMbinexp : mutexp\n                | compexpmutexp : expression \'+\' expression\n                | expression \'-\' expression\n                | expression \'*\' expression\n                | expression \'/\' expression\n                | expression DOTADD expression\n                | expression DOTSUB expression\n                | expression DOTMUL expression\n                | expression DOTDIV expressioncompexp : expression LE expression\n                | expression GE expression\n                | expression EQ expression\n                | expression \'>\' expression\n                | expression \'<\' expression\n                | expression DIFF expressionspecial : EYE\n                | ZEROS\n                | ONESminit : \'[\' matrixcontents \']\' \',\' minit\n                | \'[\' matrixcontents \']\'\n                | matrixcontentsmatrixcontents : expression\n                        |  expression \',\' matrixcontentsifexpr : IF \'(\' expression \')\' instruction %prec IFPREC\n                | IF \'(\' expression \')\' instruction ELSE instructionloop : forloop\n            | whileloopforloop : FOR ID \'=\' range instructionwhileloop : WHILE \'(\' expression \')\' instructionrange : expression \':\' expressionreturnexpr : RETURN expressionprintexpr : PRINT printableprintable : STRING\n                | expression\n                | printable \',\' expression'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,7,8,12,13,14,15,16,21,22,28,29,30,31,32,40,41,42,43,58,59,60,61,72,73,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,108,112,122,124,126,129,131,],[-3,0,-1,-2,-5,-6,-8,-9,-13,-26,-27,-28,-29,-64,-65,-38,-39,-34,-35,-24,-36,-37,-4,-33,-7,-10,-11,-12,-29,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,-62,-66,-67,-25,-63,]),'[':([0,4,5,7,8,12,13,14,15,16,18,19,21,22,23,24,27,28,29,30,31,32,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,105,107,108,110,112,115,117,118,120,121,122,124,125,126,128,129,130,131,],[18,18,-6,-8,-9,-13,-26,-27,-28,-29,68,18,-64,-65,18,18,18,-38,-39,-34,-35,80,-36,-37,-33,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-7,-10,-11,-12,18,18,18,18,18,18,68,-29,-32,18,18,18,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,18,18,-18,18,-30,18,18,18,18,68,-62,-66,18,-67,18,-25,-68,-63,]),'-':([0,4,5,7,8,12,13,14,15,16,18,19,21,22,23,24,27,28,29,30,31,32,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,78,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,],[19,19,45,-8,-9,-13,-26,-27,-28,-29,19,19,-64,-65,19,19,19,-38,-39,-34,-35,-24,-36,-37,-33,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-7,-10,-11,-12,19,19,19,19,19,19,19,45,-29,-32,19,45,45,19,19,-40,-41,-42,-43,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-31,19,45,19,-18,45,19,45,-30,19,45,19,19,45,19,19,-62,45,-66,19,-67,19,-25,45,-63,]),'IF':([0,4,5,7,8,12,13,14,15,16,21,22,27,28,29,30,31,32,40,41,43,58,59,60,61,72,73,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,108,112,115,118,120,122,124,126,128,129,130,131,],[20,20,-6,-8,-9,-13,-26,-27,-28,-29,-64,-65,20,-38,-39,-34,-35,-24,-36,-37,-33,-7,-10,-11,-12,-29,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,20,20,20,-62,-66,-67,20,-25,-68,-63,]),'RETURN':([0,4,5,7,8,12,13,14,15,16,21,22,27,28,29,30,31,32,40,41,43,58,59,60,61,72,73,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,108,112,115,118,120,122,124,126,128,129,130,131,],[23,23,-6,-8,-9,-13,-26,-27,-28,-29,-64,-65,23,-38,-39,-34,-35,-24,-36,-37,-33,-7,-10,-11,-12,-29,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,23,23,23,-62,-66,-67,23,-25,-68,-63,]),'PRINT':([0,4,5,7,8,12,13,14,15,16,21,22,27,28,29,30,31,32,40,41,43,58,59,60,61,72,73,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,108,112,115,118,120,122,124,126,128,129,130,131,],[24,24,-6,-8,-9,-13,-26,-27,-28,-29,-64,-65,24,-38,-39,-34,-35,-24,-36,-37,-33,-7,-10,-11,-12,-29,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,24,24,24,-62,-66,-67,24,-25,-68,-63,]),'{':([0,4,5,7,8,12,13,14,15,16,21,22,27,28,29,30,31,32,40,41,43,58,59,60,61,72,73,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,108,112,115,118,120,122,124,126,128,129,130,131,],[27,27,-6,-8,-9,-13,-26,-27,-28,-29,-64,-65,27,-38,-39,-34,-35,-24,-36,-37,-33,-7,-10,-11,-12,-29,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,27,27,27,-62,-66,-67,27,-25,-68,-63,]),'ID':([0,4,5,7,8,12,13,14,15,16,18,19,21,22,23,24,27,28,29,30,31,32,36,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,105,107,108,110,112,115,117,118,120,121,122,124,125,126,128,129,130,131,],[32,32,-6,-8,-9,-13,-26,-27,-28,-29,32,32,-64,-65,32,32,32,-38,-39,-34,-35,-24,81,-36,-37,-33,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-7,-10,-11,-12,32,32,32,32,32,32,32,-29,-32,32,32,32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,32,32,-18,32,-30,32,32,32,32,32,-62,-66,32,-67,32,-25,-68,-63,]),'EYE':([0,4,5,7,8,12,13,14,15,16,18,19,21,22,23,24,27,28,29,30,31,32,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,105,107,108,110,112,115,117,118,120,121,122,124,125,126,128,129,130,131,],[33,33,-6,-8,-9,-13,-26,-27,-28,-29,33,33,-64,-65,33,33,33,-38,-39,-34,-35,-24,-36,-37,-33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-7,-10,-11,-12,33,33,33,33,33,33,33,-29,-32,33,33,33,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,33,33,-18,33,-30,33,33,33,33,33,-62,-66,33,-67,33,-25,-68,-63,]),'ZEROS':([0,4,5,7,8,12,13,14,15,16,18,19,21,22,23,24,27,28,29,30,31,32,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,105,107,108,110,112,115,117,118,120,121,122,124,125,126,128,129,130,131,],[34,34,-6,-8,-9,-13,-26,-27,-28,-29,34,34,-64,-65,34,34,34,-38,-39,-34,-35,-24,-36,-37,-33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-7,-10,-11,-12,34,34,34,34,34,34,34,-29,-32,34,34,34,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,34,34,-18,34,-30,34,34,34,34,34,-62,-66,34,-67,34,-25,-68,-63,]),'ONES':([0,4,5,7,8,12,13,14,15,16,18,19,21,22,23,24,27,28,29,30,31,32,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,105,107,108,110,112,115,117,118,120,121,122,124,125,126,128,129,130,131,],[35,35,-6,-8,-9,-13,-26,-27,-28,-29,35,35,-64,-65,35,35,35,-38,-39,-34,-35,-24,-36,-37,-33,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-7,-10,-11,-12,35,35,35,35,35,35,35,-29,-32,35,35,35,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,35,35,-18,35,-30,35,35,35,35,35,-62,-66,35,-67,35,-25,-68,-63,]),'FOR':([0,4,5,7,8,12,13,14,15,16,21,22,27,28,29,30,31,32,40,41,43,58,59,60,61,72,73,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,108,112,115,118,120,122,124,126,128,129,130,131,],[36,36,-6,-8,-9,-13,-26,-27,-28,-29,-64,-65,36,-38,-39,-34,-35,-24,-36,-37,-33,-7,-10,-11,-12,-29,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,36,36,36,-62,-66,-67,36,-25,-68,-63,]),'WHILE':([0,4,5,7,8,12,13,14,15,16,21,22,27,28,29,30,31,32,40,41,43,58,59,60,61,72,73,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,108,112,115,118,120,122,124,126,128,129,130,131,],[37,37,-6,-8,-9,-13,-26,-27,-28,-29,-64,-65,37,-38,-39,-34,-35,-24,-36,-37,-33,-7,-10,-11,-12,-29,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,37,37,37,-62,-66,-67,37,-25,-68,-63,]),'BREAK':([0,4,5,7,8,12,13,14,15,16,21,22,27,28,29,30,31,32,40,41,43,58,59,60,61,72,73,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,108,112,115,118,120,122,124,126,128,129,130,131,],[38,38,-6,-8,-9,-13,-26,-27,-28,-29,-64,-65,38,-38,-39,-34,-35,-24,-36,-37,-33,-7,-10,-11,-12,-29,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,38,38,38,-62,-66,-67,38,-25,-68,-63,]),'CONTINUE':([0,4,5,7,8,12,13,14,15,16,21,22,27,28,29,30,31,32,40,41,43,58,59,60,61,72,73,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,108,112,115,118,120,122,124,126,128,129,130,131,],[39,39,-6,-8,-9,-13,-26,-27,-28,-29,-64,-65,39,-38,-39,-34,-35,-24,-36,-37,-33,-7,-10,-11,-12,-29,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,39,39,39,-62,-66,-67,39,-25,-68,-63,]),'INTNUM':([0,4,5,7,8,12,13,14,15,16,18,19,21,22,23,24,27,28,29,30,31,32,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,105,107,108,110,112,115,117,118,120,121,122,124,125,126,128,129,130,131,],[40,40,-6,-8,-9,-13,-26,-27,-28,-29,40,40,-64,-65,40,40,40,-38,-39,-34,-35,-24,-36,-37,-33,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-7,-10,-11,-12,40,40,40,40,40,40,40,-29,-32,40,40,40,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,40,40,-18,40,-30,40,40,40,40,40,-62,-66,40,-67,40,-25,-68,-63,]),'FLOATNUM':([0,4,5,7,8,12,13,14,15,16,18,19,21,22,23,24,27,28,29,30,31,32,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,105,107,108,110,112,115,117,118,120,121,122,124,125,126,128,129,130,131,],[41,41,-6,-8,-9,-13,-26,-27,-28,-29,41,41,-64,-65,41,41,41,-38,-39,-34,-35,-24,-36,-37,-33,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-7,-10,-11,-12,41,41,41,41,41,41,41,-29,-32,41,41,41,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,41,41,-18,41,-30,41,41,41,41,41,-62,-66,41,-67,41,-25,-68,-63,]),'}':([4,5,7,8,12,13,14,15,16,21,22,28,29,30,31,32,40,41,42,43,58,59,60,61,72,73,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,108,112,122,124,126,129,131,],[-5,-6,-8,-9,-13,-26,-27,-28,-29,-64,-65,-38,-39,-34,-35,-24,-36,-37,-4,-33,-7,-10,-11,-12,-29,-32,108,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,-62,-66,-67,-25,-63,]),'ELSE':([5,7,8,12,13,14,15,16,21,22,28,29,30,31,32,40,41,43,58,59,60,61,72,73,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,108,112,122,124,126,129,131,],[-6,-8,-9,-13,-26,-27,-28,-29,-64,-65,-38,-39,-34,-35,-24,-36,-37,-33,-7,-10,-11,-12,-29,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-18,-30,128,-66,-67,-25,-63,]),"'":([5,13,14,15,16,28,29,30,31,32,40,41,43,71,72,73,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,109,111,112,116,119,123,129,130,],[43,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,43,-29,-32,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-31,43,43,43,-30,43,43,43,-25,43,]),'+':([5,13,14,15,16,28,29,30,31,32,40,41,43,71,72,73,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,109,111,112,116,119,123,129,130,],[44,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,44,-29,-32,44,44,-40,-41,-42,-43,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-31,44,44,44,-30,44,44,44,-25,44,]),'*':([5,13,14,15,16,28,29,30,31,32,40,41,43,71,72,73,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,109,111,112,116,119,123,129,130,],[46,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,46,-29,-32,46,46,46,46,-42,-43,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-31,46,46,46,-30,46,46,46,-25,46,]),'/':([5,13,14,15,16,28,29,30,31,32,40,41,43,71,72,73,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,109,111,112,116,119,123,129,130,],[47,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,47,-29,-32,47,47,47,47,-42,-43,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-31,47,47,47,-30,47,47,47,-25,47,]),'DOTADD':([5,13,14,15,16,28,29,30,31,32,40,41,43,71,72,73,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,109,111,112,116,119,123,129,130,],[48,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,48,-29,-32,48,48,-40,-41,-42,-43,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-31,48,48,48,-30,48,48,48,-25,48,]),'DOTSUB':([5,13,14,15,16,28,29,30,31,32,40,41,43,71,72,73,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,109,111,112,116,119,123,129,130,],[49,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,49,-29,-32,49,49,-40,-41,-42,-43,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-31,49,49,49,-30,49,49,49,-25,49,]),'DOTMUL':([5,13,14,15,16,28,29,30,31,32,40,41,43,71,72,73,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,109,111,112,116,119,123,129,130,],[50,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,50,-29,-32,50,50,-40,-41,-42,-43,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-31,50,50,50,-30,50,50,50,-25,50,]),'DOTDIV':([5,13,14,15,16,28,29,30,31,32,40,41,43,71,72,73,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,109,111,112,116,119,123,129,130,],[51,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,51,-29,-32,51,51,-40,-41,-42,-43,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-31,51,51,51,-30,51,51,51,-25,51,]),'LE':([5,13,14,15,16,28,29,30,31,32,40,41,43,71,72,73,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,109,111,112,116,119,123,129,130,],[52,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,52,-29,-32,52,52,-40,-41,-42,-43,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-31,52,52,52,-30,52,52,52,-25,52,]),'GE':([5,13,14,15,16,28,29,30,31,32,40,41,43,71,72,73,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,109,111,112,116,119,123,129,130,],[53,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,53,-29,-32,53,53,-40,-41,-42,-43,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-31,53,53,53,-30,53,53,53,-25,53,]),'EQ':([5,13,14,15,16,28,29,30,31,32,40,41,43,71,72,73,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,109,111,112,116,119,123,129,130,],[54,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,54,-29,-32,54,54,-40,-41,-42,-43,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-31,54,54,54,-30,54,54,54,-25,54,]),'>':([5,13,14,15,16,28,29,30,31,32,40,41,43,71,72,73,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,109,111,112,116,119,123,129,130,],[55,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,55,-29,-32,55,55,-40,-41,-42,-43,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-31,55,55,55,-30,55,55,55,-25,55,]),'<':([5,13,14,15,16,28,29,30,31,32,40,41,43,71,72,73,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,109,111,112,116,119,123,129,130,],[56,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,56,-29,-32,56,56,-40,-41,-42,-43,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-31,56,56,56,-30,56,56,56,-25,56,]),'DIFF':([5,13,14,15,16,28,29,30,31,32,40,41,43,71,72,73,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,109,111,112,116,119,123,129,130,],[57,-26,-27,-28,-29,-38,-39,-34,-35,-24,-36,-37,-33,57,-29,-32,57,57,-40,-41,-42,-43,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-31,57,57,57,-30,57,57,57,-25,57,]),';':([6,9,10,11,13,14,15,25,26,28,29,30,31,32,38,39,40,41,43,72,73,75,76,77,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,112,116,129,],[58,59,60,61,-26,-27,-28,-14,-15,-38,-39,-34,-35,-24,-16,-17,-36,-37,-33,-29,-32,-69,-70,-71,-72,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-19,-20,-21,-22,-23,-31,-30,-73,-25,]),',':([13,14,15,28,29,30,31,32,40,41,43,71,72,73,76,77,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,109,112,113,116,129,],[-26,-27,-28,-38,-39,-34,-35,-24,-36,-37,-33,105,-29,-32,107,-71,-72,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,117,-30,121,-73,-25,]),']':([13,14,15,28,29,30,31,32,40,41,43,69,70,71,72,73,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,104,112,113,114,123,127,129,],[-26,-27,-28,-38,-39,-34,-35,-24,-36,-37,-33,104,-59,-60,-29,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,113,-31,-30,-58,-61,129,-57,-25,]),')':([13,14,15,28,29,30,31,32,40,41,43,72,73,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,106,111,112,129,],[-26,-27,-28,-38,-39,-34,-35,-24,-36,-37,-33,-29,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,112,-31,115,120,-30,-25,]),':':([13,14,15,28,29,30,31,32,40,41,43,72,73,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,112,119,129,],[-26,-27,-28,-38,-39,-34,-35,-24,-36,-37,-33,-29,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,-30,125,-25,]),'=':([16,32,81,129,],[62,-24,110,-25,]),'ADDASSIGN':([16,32,129,],[63,-24,-25,]),'SUBASSIGN':([16,32,129,],[64,-24,-25,]),'MULASSIGN':([16,32,129,],[65,-24,-25,]),'DIVASSIGN':([16,32,129,],[66,-24,-25,]),'(':([17,20,33,34,35,37,],[67,74,-54,-55,-56,82,]),'STRING':([24,],[77,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,4,27,],[3,42,79,]),'instruction':([0,4,27,115,118,120,128,],[4,4,4,122,124,126,131,]),'expression':([0,4,18,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,74,80,82,105,107,110,115,117,118,120,121,125,128,],[5,5,71,73,75,78,5,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,71,106,109,111,71,116,119,5,123,5,5,71,130,5,]),'assignment':([0,4,27,115,118,120,128,],[6,6,6,6,6,6,6,]),'ifexpr':([0,4,27,115,118,120,128,],[7,7,7,7,7,7,7,]),'loop':([0,4,27,115,118,120,128,],[8,8,8,8,8,8,8,]),'returnexpr':([0,4,27,115,118,120,128,],[9,9,9,9,9,9,9,]),'printexpr':([0,4,27,115,118,120,128,],[10,10,10,10,10,10,10,]),'breakOrContinue':([0,4,27,115,118,120,128,],[11,11,11,11,11,11,11,]),'complexinstruction':([0,4,27,115,118,120,128,],[12,12,12,12,12,12,12,]),'binexp':([0,4,18,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,74,80,82,105,107,110,115,117,118,120,121,125,128,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'transpose':([0,4,18,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,74,80,82,105,107,110,115,117,118,120,121,125,128,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'num':([0,4,18,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,74,80,82,105,107,110,115,117,118,120,121,125,128,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'assignable':([0,4,18,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,74,80,82,105,107,110,115,117,118,120,121,125,128,],[16,16,72,72,72,72,16,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,16,72,16,16,72,72,16,]),'special':([0,4,18,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,74,80,82,105,107,110,115,117,118,120,121,125,128,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'forloop':([0,4,27,115,118,120,128,],[21,21,21,21,21,21,21,]),'whileloop':([0,4,27,115,118,120,128,],[22,22,22,22,22,22,22,]),'brk':([0,4,27,115,118,120,128,],[25,25,25,25,25,25,25,]),'cnt':([0,4,27,115,118,120,128,],[26,26,26,26,26,26,26,]),'mutexp':([0,4,18,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,74,80,82,105,107,110,115,117,118,120,121,125,128,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'compexp':([0,4,18,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,74,80,82,105,107,110,115,117,118,120,121,125,128,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'int':([0,4,18,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,74,80,82,105,107,110,115,117,118,120,121,125,128,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'float':([0,4,18,19,23,24,27,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,74,80,82,105,107,110,115,117,118,120,121,125,128,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'minit':([18,68,121,],[69,69,127,]),'matrixcontents':([18,68,105,121,],[70,103,114,70,]),'printable':([24,],[76,]),'range':([110,],[118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',32),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',37),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','Mparser.py',42),
  ('instructions -> instruction instructions','instructions',2,'p_instructions_1','Mparser.py',46),
  ('instructions -> instruction','instructions',1,'p_instructions_2','Mparser.py',51),
  ('instruction -> expression','instruction',1,'p_instruction','Mparser.py',56),
  ('instruction -> assignment ;','instruction',2,'p_instruction','Mparser.py',57),
  ('instruction -> ifexpr','instruction',1,'p_instruction','Mparser.py',58),
  ('instruction -> loop','instruction',1,'p_instruction','Mparser.py',59),
  ('instruction -> returnexpr ;','instruction',2,'p_instruction','Mparser.py',60),
  ('instruction -> printexpr ;','instruction',2,'p_instruction','Mparser.py',61),
  ('instruction -> breakOrContinue ;','instruction',2,'p_instruction','Mparser.py',62),
  ('instruction -> complexinstruction','instruction',1,'p_instruction','Mparser.py',63),
  ('breakOrContinue -> brk','breakOrContinue',1,'p_breakOrContinue','Mparser.py',68),
  ('breakOrContinue -> cnt','breakOrContinue',1,'p_breakOrContinue','Mparser.py',69),
  ('brk -> BREAK','brk',1,'p_brk','Mparser.py',74),
  ('cnt -> CONTINUE','cnt',1,'p_cnt','Mparser.py',79),
  ('complexinstruction -> { instructions }','complexinstruction',3,'p_complexinstruction','Mparser.py',83),
  ('assignment -> assignable = expression','assignment',3,'p_assignment','Mparser.py',88),
  ('assignment -> assignable ADDASSIGN expression','assignment',3,'p_assignment','Mparser.py',89),
  ('assignment -> assignable SUBASSIGN expression','assignment',3,'p_assignment','Mparser.py',90),
  ('assignment -> assignable MULASSIGN expression','assignment',3,'p_assignment','Mparser.py',91),
  ('assignment -> assignable DIVASSIGN expression','assignment',3,'p_assignment','Mparser.py',92),
  ('assignable -> ID','assignable',1,'p_assignable','Mparser.py',98),
  ('assignable -> ID [ expression , expression ]','assignable',6,'p_assignable','Mparser.py',99),
  ('expression -> binexp','expression',1,'p_expression','Mparser.py',107),
  ('expression -> transpose','expression',1,'p_expression','Mparser.py',108),
  ('expression -> num','expression',1,'p_expression','Mparser.py',109),
  ('expression -> assignable','expression',1,'p_expression','Mparser.py',110),
  ('expression -> special ( expression )','expression',4,'p_expression','Mparser.py',111),
  ('expression -> [ minit ]','expression',3,'p_expression','Mparser.py',112),
  ('expression -> - expression','expression',2,'p_expression','Mparser.py',113),
  ("transpose -> expression '",'transpose',2,'p_transpose','Mparser.py',125),
  ('num -> int','num',1,'p_num','Mparser.py',131),
  ('num -> float','num',1,'p_num','Mparser.py',132),
  ('int -> INTNUM','int',1,'p_int','Mparser.py',137),
  ('float -> FLOATNUM','float',1,'p_float','Mparser.py',142),
  ('binexp -> mutexp','binexp',1,'p_binexp','Mparser.py',147),
  ('binexp -> compexp','binexp',1,'p_binexp','Mparser.py',148),
  ('mutexp -> expression + expression','mutexp',3,'p_mutexp','Mparser.py',153),
  ('mutexp -> expression - expression','mutexp',3,'p_mutexp','Mparser.py',154),
  ('mutexp -> expression * expression','mutexp',3,'p_mutexp','Mparser.py',155),
  ('mutexp -> expression / expression','mutexp',3,'p_mutexp','Mparser.py',156),
  ('mutexp -> expression DOTADD expression','mutexp',3,'p_mutexp','Mparser.py',157),
  ('mutexp -> expression DOTSUB expression','mutexp',3,'p_mutexp','Mparser.py',158),
  ('mutexp -> expression DOTMUL expression','mutexp',3,'p_mutexp','Mparser.py',159),
  ('mutexp -> expression DOTDIV expression','mutexp',3,'p_mutexp','Mparser.py',160),
  ('compexp -> expression LE expression','compexp',3,'p_compexp','Mparser.py',165),
  ('compexp -> expression GE expression','compexp',3,'p_compexp','Mparser.py',166),
  ('compexp -> expression EQ expression','compexp',3,'p_compexp','Mparser.py',167),
  ('compexp -> expression > expression','compexp',3,'p_compexp','Mparser.py',168),
  ('compexp -> expression < expression','compexp',3,'p_compexp','Mparser.py',169),
  ('compexp -> expression DIFF expression','compexp',3,'p_compexp','Mparser.py',170),
  ('special -> EYE','special',1,'p_special','Mparser.py',175),
  ('special -> ZEROS','special',1,'p_special','Mparser.py',176),
  ('special -> ONES','special',1,'p_special','Mparser.py',177),
  ('minit -> [ matrixcontents ] , minit','minit',5,'p_minit','Mparser.py',182),
  ('minit -> [ matrixcontents ]','minit',3,'p_minit','Mparser.py',183),
  ('minit -> matrixcontents','minit',1,'p_minit','Mparser.py',184),
  ('matrixcontents -> expression','matrixcontents',1,'p_matrixcontents','Mparser.py',194),
  ('matrixcontents -> expression , matrixcontents','matrixcontents',3,'p_matrixcontents','Mparser.py',195),
  ('ifexpr -> IF ( expression ) instruction','ifexpr',5,'p_ifexpr','Mparser.py',203),
  ('ifexpr -> IF ( expression ) instruction ELSE instruction','ifexpr',7,'p_ifexpr','Mparser.py',204),
  ('loop -> forloop','loop',1,'p_loop','Mparser.py',212),
  ('loop -> whileloop','loop',1,'p_loop','Mparser.py',213),
  ('forloop -> FOR ID = range instruction','forloop',5,'p_forloop','Mparser.py',218),
  ('whileloop -> WHILE ( expression ) instruction','whileloop',5,'p_whileloop','Mparser.py',223),
  ('range -> expression : expression','range',3,'p_range','Mparser.py',228),
  ('returnexpr -> RETURN expression','returnexpr',2,'p_returnexpr','Mparser.py',233),
  ('printexpr -> PRINT printable','printexpr',2,'p_printexpr','Mparser.py',238),
  ('printable -> STRING','printable',1,'p_printable','Mparser.py',243),
  ('printable -> expression','printable',1,'p_printable','Mparser.py',244),
  ('printable -> printable , expression','printable',3,'p_printable','Mparser.py',245),
]
